{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/EtherWallet.sol"
  },
  "ast": {
    "absolutePath": "contracts/EtherWallet.sol",
    "exportedSymbols": {
      "EtherWallet": [
        163
      ]
    },
    "id": 164,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EtherWallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 163,
        "linearizedBaseContracts": [
          163
        ],
        "name": "EtherWallet",
        "nameLocation": "388:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "470:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "462:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "deploy_time",
            "nameLocation": "489:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "481:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "ended",
            "nameLocation": "511:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "506:10:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "506:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "527:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 163,
            "src": "522:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "522:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 15,
            "name": "Deployed",
            "nameLocation": "563:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "572:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "581:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "581:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:18:0"
            },
            "src": "557:33:0"
          },
          {
            "anonymous": false,
            "id": 21,
            "name": "Funded",
            "nameLocation": "634:6:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "641:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "650:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "640:18:0"
            },
            "src": "628:31:0"
          },
          {
            "anonymous": false,
            "id": 27,
            "name": "Withdraw",
            "nameLocation": "708:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "717:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "726:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:18:0"
            },
            "src": "702:33:0"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "803:281:0",
              "statements": [
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "813:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "821:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "821:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "813:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "813:18:0"
                },
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "deploy_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "903:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 36,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "917:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "917:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "903:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "903:29:0"
                },
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "ended",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "970:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "978:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "970:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "970:13:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1058:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46,
                        "name": "deploy_time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1065:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "Deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1049:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1049:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "EmitStatement",
                  "src": "1044:33:0"
                }
              ]
            },
            "id": 50,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "803:0:0"
            },
            "scope": 163,
            "src": "785:299:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "1121:123:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1139:7:0",
                        "subExpression": {
                          "id": 53,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1140:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207265646f207468697320616374696f6e2e",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1148:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89b5f5bd8fd596d1caa2b2c5771ee69cfe5cecb951856371f33e719956d8cd42",
                          "typeString": "literal_string \"You cannot redo this action.\""
                        },
                        "value": "You cannot redo this action."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89b5f5bd8fd596d1caa2b2c5771ee69cfe5cecb951856371f33e719956d8cd42",
                          "typeString": "literal_string \"You cannot redo this action.\""
                        }
                      ],
                      "id": 52,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1131:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:48:0"
                },
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1189:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1198:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1189:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:13:0"
                },
                {
                  "id": 62,
                  "nodeType": "PlaceholderStatement",
                  "src": "1212:1:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1223:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1232:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1223:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:14:0"
                }
              ]
            },
            "id": 68,
            "name": "NoReentrance",
            "nameLocation": "1102:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1114:2:0"
            },
            "src": "1093:151:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1301:160:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1319:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1319:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1341:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1333:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 76,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1333:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1333:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1319:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2141646472657373",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1345:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccf1eca8503d0332e7f65c372c834785320d631dbfb1cefc5865d6c7613e0b5f",
                          "typeString": "literal_string \"!Address\""
                        },
                        "value": "!Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccf1eca8503d0332e7f65c372c834785320d631dbfb1cefc5865d6c7613e0b5f",
                          "typeString": "literal_string \"!Address\""
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1311:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 85,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1374:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1374:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 87,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1388:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1374:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572202153656e64",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1395:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_341b6027cff70d459099d2fe7f7509040f4308ad893619d78ea319e13db75fb4",
                          "typeString": "literal_string \"Owner !Send\""
                        },
                        "value": "Owner !Send"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_341b6027cff70d459099d2fe7f7509040f4308ad893619d78ea319e13db75fb4",
                          "typeString": "literal_string \"Owner !Send\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1366:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1432:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1432:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1444:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1444:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92,
                      "name": "Funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1425:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1425:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "EmitStatement",
                  "src": "1420:34:0"
                }
              ]
            },
            "functionSelector": "b60d4288",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 71,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70,
                  "name": "NoReentrance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "1284:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1284:12:0"
              }
            ],
            "name": "fund",
            "nameLocation": "1262:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1266:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:0"
            },
            "scope": 163,
            "src": "1253:208:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1532:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1550:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1550:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 108,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1564:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1550:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "214f776e6572",
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1571:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0794ad23c98919f7852dbe5fdc41e170afbe3a97a1c48ea66a80e1ebd7c3e066",
                          "typeString": "literal_string \"!Owner\""
                        },
                        "value": "!Owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0794ad23c98919f7852dbe5fdc41e170afbe3a97a1c48ea66a80e1ebd7c3e066",
                          "typeString": "literal_string \"!Owner\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1542:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:38:0"
                },
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 113,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1590:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 116,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1608:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EtherWallet_$163",
                              "typeString": "contract EtherWallet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EtherWallet_$163",
                              "typeString": "contract EtherWallet"
                            }
                          ],
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1600:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1600:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1600:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1600:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1590:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:31:0"
                }
              ]
            },
            "functionSelector": "379b2495",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewFunds",
            "nameLocation": "1479:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:2:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1519:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1511:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1510:17:0"
            },
            "scope": 163,
            "src": "1470:158:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "1694:205:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 128,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1712:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1712:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 130,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1726:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1712:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "214f776e6572",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1733:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0794ad23c98919f7852dbe5fdc41e170afbe3a97a1c48ea66a80e1ebd7c3e066",
                          "typeString": "literal_string \"!Owner\""
                        },
                        "value": "!Owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0794ad23c98919f7852dbe5fdc41e170afbe3a97a1c48ea66a80e1ebd7c3e066",
                          "typeString": "literal_string \"!Owner\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1704:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:38:0"
                },
                {
                  "assignments": [
                    136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "1760:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 161,
                      "src": "1752:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1752:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 139,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1774:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EtherWallet_$163",
                            "typeString": "contract EtherWallet"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_EtherWallet_$163",
                            "typeString": "contract EtherWallet"
                          }
                        ],
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1766:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1766:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1766:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1766:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1752:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 150,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1829:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_EtherWallet_$163",
                                "typeString": "contract EtherWallet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_EtherWallet_$163",
                                "typeString": "contract EtherWallet"
                              }
                            ],
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1821:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 148,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1821:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1821:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1821:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 145,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1805:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1797:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 143,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1797:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1797:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1797:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:46:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1876:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1876:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 158,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "1888:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 155,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1867:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "EmitStatement",
                  "src": "1862:30:0"
                }
              ]
            },
            "functionSelector": "24600fc3",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 124,
                  "name": "NoReentrance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "1677:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1677:12:0"
              }
            ],
            "name": "withdrawFunds",
            "nameLocation": "1646:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1659:2:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1694:0:0"
            },
            "scope": 163,
            "src": "1637:262:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 164,
        "src": "379:1522:0",
        "usedErrors": []
      }
    ],
    "src": "32:1869:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081179091554260018190556002805460ff191690556040805192835260208301919091527fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e1910160405180910390a16103538061007f6000396000f3fe6080604052600436106100345760003560e01c806324600fc314610039578063379b249514610043578063b60d42881461006a575b600080fd5b610041610072565b005b34801561004f57600080fd5b506100586101a7565b60405190815260200160405180910390f35b6100416101f0565b600254610100900460ff16156100cf5760405162461bcd60e51b815260206004820152601c60248201527f596f752063616e6e6f74207265646f207468697320616374696f6e2e0000000060448201526064015b60405180910390fd5b6002805461ff001916610100179055600054336001600160a01b03909116146101235760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b60448201526064016100c6565b6000805460405147926001600160a01b03909216914780156108fc02929091818181858888f1935050505015801561015f573d6000803e3d6000fd5b5060408051338152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a1506002805461ff0019169055565b600080546001600160a01b031633146101eb5760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b60448201526064016100c6565b504790565b600254610100900460ff16156102485760405162461bcd60e51b815260206004820152601c60248201527f596f752063616e6e6f74207265646f207468697320616374696f6e2e0000000060448201526064016100c6565b6002805461ff0019166101001790553361028f5760405162461bcd60e51b8152602060048201526008602482015267214164647265737360c01b60448201526064016100c6565b6000546001600160a01b03163314156102d85760405162461bcd60e51b815260206004820152600b60248201526a13dddb995c880854d95b9960aa1b60448201526064016100c6565b604080513381523460208201527f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524910160405180910390a16002805461ff001916905556fea2646970667358221220b0dc2ac79ba3dc1eb3b2adbc689ad73c937485d403c9e6e7766b3c4accc64c2f64736f6c634300080c0033",
  "bytecodeSha1": "e094e266a5529f2f14d68448399e05a13c36dc73",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "EtherWallet",
  "coverageMap": {
    "branches": {
      "0": {
        "EtherWallet.fund": {
          "10": [
            1374,
            1393,
            true
          ]
        },
        "EtherWallet.viewFunds": {
          "9": [
            1550,
            1569,
            true
          ]
        },
        "EtherWallet.withdrawFunds": {
          "8": [
            1712,
            1731,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "EtherWallet.fund": {
          "5": [
            1311,
            1356
          ],
          "6": [
            1366,
            1409
          ],
          "7": [
            1420,
            1454
          ]
        },
        "EtherWallet.viewFunds": {
          "3": [
            1542,
            1580
          ],
          "4": [
            1590,
            1621
          ]
        },
        "EtherWallet.withdrawFunds": {
          "0": [
            1704,
            1742
          ],
          "1": [
            1797,
            1843
          ],
          "2": [
            1862,
            1892
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100345760003560e01c806324600fc314610039578063379b249514610043578063b60d42881461006a575b600080fd5b610041610072565b005b34801561004f57600080fd5b506100586101a7565b60405190815260200160405180910390f35b6100416101f0565b600254610100900460ff16156100cf5760405162461bcd60e51b815260206004820152601c60248201527f596f752063616e6e6f74207265646f207468697320616374696f6e2e0000000060448201526064015b60405180910390fd5b6002805461ff001916610100179055600054336001600160a01b03909116146101235760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b60448201526064016100c6565b6000805460405147926001600160a01b03909216914780156108fc02929091818181858888f1935050505015801561015f573d6000803e3d6000fd5b5060408051338152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a1506002805461ff0019169055565b600080546001600160a01b031633146101eb5760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b60448201526064016100c6565b504790565b600254610100900460ff16156102485760405162461bcd60e51b815260206004820152601c60248201527f596f752063616e6e6f74207265646f207468697320616374696f6e2e0000000060448201526064016100c6565b6002805461ff0019166101001790553361028f5760405162461bcd60e51b8152602060048201526008602482015267214164647265737360c01b60448201526064016100c6565b6000546001600160a01b03163314156102d85760405162461bcd60e51b815260206004820152600b60248201526a13dddb995c880854d95b9960aa1b60448201526064016100c6565b604080513381523460208201527f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524910160405180910390a16002805461ff001916905556fea2646970667358221220b0dc2ac79ba3dc1eb3b2adbc689ad73c937485d403c9e6e7766b3c4accc64c2f64736f6c634300080c0033",
  "deployedSourceMap": "379:1522:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:262;;;:::i;:::-;;1470:158;;;;;;;;;;;;;:::i;:::-;;;160:25:1;;;148:2;133:18;1470:158:0;;;;;;;1253:208;;;:::i;1637:262::-;1140:6;;;;;;;1139:7;1131:48;;;;-1:-1:-1;;;1131:48:0;;398:2:1;1131:48:0;;;380:21:1;437:2;417:18;;;410:30;476;456:18;;;449:58;524:18;;1131:48:0;;;;;;;;;1189:6;:13;;-1:-1:-1;;1189:13:0;;;;;;1726:5;1712:10:::1;-1:-1:-1::0;;;;;1726:5:0;;::::1;1712:19;1704:38;;;::::0;-1:-1:-1;;;1704:38:0;;755:2:1;1704:38:0::1;::::0;::::1;737:21:1::0;794:1;774:18;;;767:29;-1:-1:-1;;;812:18:1;;;805:36;858:18;;1704:38:0::1;553:329:1::0;1704:38:0::1;1752:11;1805:5:::0;;1797:46:::1;::::0;1766:21:::1;::::0;-1:-1:-1;;;;;1805:5:0;;::::1;::::0;1821:21:::1;1797:46:::0;::::1;;;::::0;1821:21;;1797:46;1752:11;1797:46;1821:21;1805:5;1797:46;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1867:25:0::1;::::0;;1876:10:::1;1061:51:1::0;;1143:2;1128:18;;1121:34;;;1867:25:0::1;::::0;1034:18:1;1867:25:0::1;;;;;;;-1:-1:-1::0;1223:6:0;:14;;-1:-1:-1;;1223:14:0;;;1637:262::o;1470:158::-;1511:15;1564:5;;-1:-1:-1;;;;;1564:5:0;1550:10;:19;1542:38;;;;-1:-1:-1;;;1542:38:0;;755:2:1;1542:38:0;;;737:21:1;794:1;774:18;;;767:29;-1:-1:-1;;;812:18:1;;;805:36;858:18;;1542:38:0;553:329:1;1542:38:0;-1:-1:-1;1600:21:0;;1470:158::o;1253:208::-;1140:6;;;;;;;1139:7;1131:48;;;;-1:-1:-1;;;1131:48:0;;398:2:1;1131:48:0;;;380:21:1;437:2;417:18;;;410:30;476;456:18;;;449:58;524:18;;1131:48:0;196:352:1;1131:48:0;1189:6;:13;;-1:-1:-1;;1189:13:0;;;;;1319:10:::1;1311:45;;;::::0;-1:-1:-1;;;1311:45:0;;1368:2:1;1311:45:0::1;::::0;::::1;1350:21:1::0;1407:1;1387:18;;;1380:29;-1:-1:-1;;;1425:18:1;;;1418:38;1473:18;;1311:45:0::1;1166:331:1::0;1311:45:0::1;1388:5;::::0;-1:-1:-1;;;;;1388:5:0::1;1374:10;:19;;1366:43;;;::::0;-1:-1:-1;;;1366:43:0;;1704:2:1;1366:43:0::1;::::0;::::1;1686:21:1::0;1743:2;1723:18;;;1716:30;-1:-1:-1;;;1762:18:1;;;1755:41;1813:18;;1366:43:0::1;1502:335:1::0;1366:43:0::1;1425:29;::::0;;1432:10:::1;1061:51:1::0;;1444:9:0::1;1143:2:1::0;1128:18;;1121:34;1425:29:0::1;::::0;1034:18:1;1425:29:0::1;;;;;;;1223:6:::0;:14;;-1:-1:-1;;1223:14:0;;;1253:208::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    379,
    1901
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x379B2495 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x6A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41 PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x58 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74207265646F207468697320616374696F6E2E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND EQ PUSH2 0x123 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x10A7BBB732B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SELFBALANCE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x2 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x10A7BBB732B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC6 JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74207265646F207468697320616374696F6E2E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE CALLER PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2141646472657373 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x13DDDB995C880854D95B99 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x5AF8184BEF8E4B45EB9F6ED7734D04DA38CED226495548F46E0C8FF8D7D9A524 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xDC 0x2A 0xC7 SWAP12 LOG3 0xDC 0x1E 0xB3 0xB2 0xAD 0xBC PUSH9 0x9AD73C937485D403C9 0xE6 0xE7 PUSH23 0x6B3C4ACCC64C2F64736F6C634300080C00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        379,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x24600FC3"
    },
    "25": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x379B2495"
    },
    "36": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43"
    },
    "40": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB60D4288"
    },
    "47": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A"
    },
    "51": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "DUP1",
      "path": "0"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        379,
        1901
      ],
      "op": "REVERT",
      "path": "0"
    },
    "57": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1637,
        1899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "58": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1637,
        1899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "61": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1637,
        1899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72"
    },
    "64": {
      "fn": "EtherWallet.withdrawFunds",
      "jump": "i",
      "offset": [
        1637,
        1899
      ],
      "op": "JUMP",
      "path": "0"
    },
    "65": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1637,
        1899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "66": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1637,
        1899
      ],
      "op": "STOP",
      "path": "0"
    },
    "67": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "68": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "69": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "DUP1",
      "path": "0"
    },
    "70": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "71": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F"
    },
    "74": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "75": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "77": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "DUP1",
      "path": "0"
    },
    "78": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "REVERT",
      "path": "0"
    },
    "79": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "80": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "POP",
      "path": "0"
    },
    "81": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58"
    },
    "84": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "87": {
      "fn": "EtherWallet.viewFunds",
      "jump": "i",
      "offset": [
        1470,
        1628
      ],
      "op": "JUMP",
      "path": "0"
    },
    "88": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "89": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "91": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "92": {
      "op": "SWAP1"
    },
    "93": {
      "op": "DUP2"
    },
    "94": {
      "op": "MSTORE"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "97": {
      "op": "ADD"
    },
    "98": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "100": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "101": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "103": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "SUB",
      "path": "0"
    },
    "104": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "105": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "RETURN",
      "path": "0"
    },
    "106": {
      "fn": "EtherWallet.fund",
      "offset": [
        1253,
        1461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "107": {
      "fn": "EtherWallet.fund",
      "offset": [
        1253,
        1461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41"
    },
    "110": {
      "fn": "EtherWallet.fund",
      "offset": [
        1253,
        1461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0"
    },
    "113": {
      "fn": "EtherWallet.fund",
      "jump": "i",
      "offset": [
        1253,
        1461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "114": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1637,
        1899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "115": {
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "117": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "118": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "121": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1140,
        1146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "122": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1140,
        1146
      ],
      "op": "DIV",
      "path": "0"
    },
    "123": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "125": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "126": {
      "offset": [
        1139,
        1146
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "127": {
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF"
    },
    "130": {
      "offset": [
        1131,
        1179
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "131": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "133": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "140": {
      "op": "SHL"
    },
    "141": {
      "offset": [
        1131,
        1179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "142": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "145": {
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "147": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "148": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "ADD",
      "path": "0"
    },
    "149": {
      "op": "MSTORE"
    },
    "150": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "154": {
      "op": "DUP3"
    },
    "155": {
      "op": "ADD"
    },
    "156": {
      "op": "MSTORE"
    },
    "157": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F74207265646F207468697320616374696F6E2E00000000"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "192": {
      "op": "DUP3"
    },
    "193": {
      "op": "ADD"
    },
    "194": {
      "op": "MSTORE"
    },
    "195": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "197": {
      "op": "ADD"
    },
    "198": {
      "offset": [
        1131,
        1179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "199": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "201": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "202": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "DUP1",
      "path": "0"
    },
    "203": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "204": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "SUB",
      "path": "0"
    },
    "205": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "206": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "207": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1131,
        1179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "offset": [
        1189,
        1195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "210": {
      "offset": [
        1189,
        1202
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1189,
        1202
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "212": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "215": {
      "op": "NOT"
    },
    "216": {
      "offset": [
        1189,
        1202
      ],
      "op": "AND",
      "path": "0"
    },
    "217": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1189,
        1202
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "220": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1189,
        1202
      ],
      "op": "OR",
      "path": "0"
    },
    "221": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1189,
        1202
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "222": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1189,
        1202
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "223": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1189,
        1202
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "225": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1726,
        1731
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "226": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1712,
        1722
      ],
      "op": "CALLER",
      "path": "0"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "233": {
      "op": "SHL"
    },
    "234": {
      "op": "SUB"
    },
    "235": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1726,
        1731
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "236": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1726,
        1731
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "237": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1726,
        1731
      ],
      "op": "AND",
      "path": "0"
    },
    "238": {
      "branch": 8,
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1712,
        1731
      ],
      "op": "EQ",
      "path": "0"
    },
    "239": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123"
    },
    "242": {
      "branch": 8,
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "243": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "245": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "246": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "250": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "252": {
      "op": "SHL"
    },
    "253": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "DUP2",
      "path": "0"
    },
    "254": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "257": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "259": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "DUP3",
      "path": "0"
    },
    "260": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "ADD",
      "path": "0"
    },
    "261": {
      "op": "MSTORE"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "266": {
      "op": "DUP3"
    },
    "267": {
      "op": "ADD"
    },
    "268": {
      "op": "MSTORE"
    },
    "269": {
      "op": "PUSH6",
      "value": "0x10A7BBB732B9"
    },
    "276": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "278": {
      "op": "SHL"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "281": {
      "op": "DUP3"
    },
    "282": {
      "op": "ADD"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1704,
        1742
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "292": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1752,
        1763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "294": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1805,
        1810
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 1
    },
    "295": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1805,
        1810
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "296": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "298": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "299": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1766,
        1787
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "300": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1766,
        1787
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "307": {
      "op": "SHL"
    },
    "308": {
      "op": "SUB"
    },
    "309": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1805,
        1810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "310": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1805,
        1810
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "311": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1805,
        1810
      ],
      "op": "AND",
      "path": "0"
    },
    "312": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1805,
        1810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "313": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1821,
        1842
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "314": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "315": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "316": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "319": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "MUL",
      "path": "0"
    },
    "320": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "321": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1821,
        1842
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "322": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1821,
        1842
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "323": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "324": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1752,
        1763
      ],
      "op": "DUP2",
      "path": "0"
    },
    "325": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP2",
      "path": "0"
    },
    "326": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1821,
        1842
      ],
      "op": "DUP6",
      "path": "0"
    },
    "327": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1805,
        1810
      ],
      "op": "DUP9",
      "path": "0"
    },
    "328": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP9",
      "path": "0"
    },
    "329": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "CALL",
      "path": "0"
    },
    "330": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "331": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "POP",
      "path": "0"
    },
    "332": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "POP",
      "path": "0"
    },
    "333": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "POP",
      "path": "0"
    },
    "334": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "POP",
      "path": "0"
    },
    "335": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "336": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "338": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F"
    },
    "341": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "342": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "343": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "345": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "DUP1",
      "path": "0"
    },
    "346": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "347": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "348": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "350": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "REVERT",
      "path": "0"
    },
    "351": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1797,
        1843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "352": {
      "op": "POP"
    },
    "353": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "355": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "DUP1",
      "path": "0"
    },
    "356": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "357": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1876,
        1886
      ],
      "op": "CALLER",
      "path": "0"
    },
    "358": {
      "op": "DUP2"
    },
    "359": {
      "op": "MSTORE"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "362": {
      "op": "DUP2"
    },
    "363": {
      "op": "ADD"
    },
    "364": {
      "op": "DUP4"
    },
    "365": {
      "op": "SWAP1"
    },
    "366": {
      "op": "MSTORE"
    },
    "367": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "400": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "401": {
      "op": "ADD"
    },
    "402": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "404": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "405": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "DUP1",
      "path": "0"
    },
    "406": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "407": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "SUB",
      "path": "0"
    },
    "408": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "409": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1867,
        1892
      ],
      "op": "LOG1",
      "path": "0"
    },
    "410": {
      "op": "POP"
    },
    "411": {
      "offset": [
        1223,
        1229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "413": {
      "offset": [
        1223,
        1237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1223,
        1237
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "415": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "418": {
      "op": "NOT"
    },
    "419": {
      "offset": [
        1223,
        1237
      ],
      "op": "AND",
      "path": "0"
    },
    "420": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1223,
        1237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "421": {
      "fn": "EtherWallet.withdrawFunds",
      "offset": [
        1223,
        1237
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "422": {
      "fn": "EtherWallet.withdrawFunds",
      "jump": "o",
      "offset": [
        1637,
        1899
      ],
      "op": "JUMP",
      "path": "0"
    },
    "423": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1470,
        1628
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "424": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1511,
        1526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "426": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1564,
        1569
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 3
    },
    "427": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1564,
        1569
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1564,
        1569
      ],
      "op": "AND",
      "path": "0"
    },
    "437": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1550,
        1560
      ],
      "op": "CALLER",
      "path": "0"
    },
    "438": {
      "branch": 9,
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1550,
        1569
      ],
      "op": "EQ",
      "path": "0"
    },
    "439": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "442": {
      "branch": 9,
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "443": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "445": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "DUP2",
      "path": "0"
    },
    "454": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "457": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "459": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "DUP3",
      "path": "0"
    },
    "460": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "ADD",
      "path": "0"
    },
    "461": {
      "op": "MSTORE"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "466": {
      "op": "DUP3"
    },
    "467": {
      "op": "ADD"
    },
    "468": {
      "op": "MSTORE"
    },
    "469": {
      "op": "PUSH6",
      "value": "0x10A7BBB732B9"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "481": {
      "op": "DUP3"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "op": "MSTORE"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "486": {
      "op": "ADD"
    },
    "487": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "490": {
      "op": "JUMP"
    },
    "491": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1542,
        1580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "492": {
      "op": "POP"
    },
    "493": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1600,
        1621
      ],
      "op": "SELFBALANCE",
      "path": "0",
      "statement": 4
    },
    "494": {
      "fn": "EtherWallet.viewFunds",
      "offset": [
        1600,
        1621
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": "EtherWallet.viewFunds",
      "jump": "o",
      "offset": [
        1470,
        1628
      ],
      "op": "JUMP",
      "path": "0"
    },
    "496": {
      "fn": "EtherWallet.fund",
      "offset": [
        1253,
        1461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "497": {
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "499": {
      "fn": "EtherWallet.fund",
      "offset": [
        1140,
        1146
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "500": {
      "fn": "EtherWallet.fund",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "503": {
      "fn": "EtherWallet.fund",
      "offset": [
        1140,
        1146
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "EtherWallet.fund",
      "offset": [
        1140,
        1146
      ],
      "op": "DIV",
      "path": "0"
    },
    "505": {
      "fn": "EtherWallet.fund",
      "offset": [
        1140,
        1146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "507": {
      "fn": "EtherWallet.fund",
      "offset": [
        1140,
        1146
      ],
      "op": "AND",
      "path": "0"
    },
    "508": {
      "offset": [
        1139,
        1146
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "509": {
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x248"
    },
    "512": {
      "offset": [
        1131,
        1179
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "513": {
      "fn": "EtherWallet.fund",
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "515": {
      "fn": "EtherWallet.fund",
      "offset": [
        1131,
        1179
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "522": {
      "op": "SHL"
    },
    "523": {
      "offset": [
        1131,
        1179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "524": {
      "fn": "EtherWallet.fund",
      "offset": [
        1131,
        1179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "527": {
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "529": {
      "fn": "EtherWallet.fund",
      "offset": [
        1131,
        1179
      ],
      "op": "DUP3",
      "path": "0"
    },
    "530": {
      "fn": "EtherWallet.fund",
      "offset": [
        1131,
        1179
      ],
      "op": "ADD",
      "path": "0"
    },
    "531": {
      "op": "MSTORE"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "536": {
      "op": "DUP3"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F74207265646F207468697320616374696F6E2E00000000"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "574": {
      "op": "DUP3"
    },
    "575": {
      "op": "ADD"
    },
    "576": {
      "op": "MSTORE"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "offset": [
        1131,
        1179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "583": {
      "op": "JUMP"
    },
    "584": {
      "offset": [
        1131,
        1179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "585": {
      "offset": [
        1189,
        1195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "587": {
      "offset": [
        1189,
        1202
      ],
      "op": "DUP1",
      "path": "0"
    },
    "588": {
      "fn": "EtherWallet.fund",
      "offset": [
        1189,
        1202
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "589": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "592": {
      "op": "NOT"
    },
    "593": {
      "offset": [
        1189,
        1202
      ],
      "op": "AND",
      "path": "0"
    },
    "594": {
      "fn": "EtherWallet.fund",
      "offset": [
        1189,
        1202
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "597": {
      "fn": "EtherWallet.fund",
      "offset": [
        1189,
        1202
      ],
      "op": "OR",
      "path": "0"
    },
    "598": {
      "fn": "EtherWallet.fund",
      "offset": [
        1189,
        1202
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "599": {
      "fn": "EtherWallet.fund",
      "offset": [
        1189,
        1202
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "600": {
      "fn": "EtherWallet.fund",
      "offset": [
        1319,
        1329
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "601": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "604": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "605": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "607": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "616": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "619": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "621": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "DUP3",
      "path": "0"
    },
    "622": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "ADD",
      "path": "0"
    },
    "623": {
      "op": "MSTORE"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "628": {
      "op": "DUP3"
    },
    "629": {
      "op": "ADD"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH8",
      "value": "0x2141646472657373"
    },
    "640": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "642": {
      "op": "SHL"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "645": {
      "op": "DUP3"
    },
    "646": {
      "op": "ADD"
    },
    "647": {
      "op": "MSTORE"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "654": {
      "op": "JUMP"
    },
    "655": {
      "fn": "EtherWallet.fund",
      "offset": [
        1311,
        1356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "656": {
      "fn": "EtherWallet.fund",
      "offset": [
        1388,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "658": {
      "fn": "EtherWallet.fund",
      "offset": [
        1388,
        1393
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "665": {
      "op": "SHL"
    },
    "666": {
      "op": "SUB"
    },
    "667": {
      "fn": "EtherWallet.fund",
      "offset": [
        1388,
        1393
      ],
      "op": "AND",
      "path": "0"
    },
    "668": {
      "fn": "EtherWallet.fund",
      "offset": [
        1374,
        1384
      ],
      "op": "CALLER",
      "path": "0"
    },
    "669": {
      "fn": "EtherWallet.fund",
      "offset": [
        1374,
        1393
      ],
      "op": "EQ",
      "path": "0"
    },
    "670": {
      "branch": 10,
      "fn": "EtherWallet.fund",
      "offset": [
        1374,
        1393
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "671": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D8"
    },
    "674": {
      "branch": 10,
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "675": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "677": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "678": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "DUP2",
      "path": "0"
    },
    "686": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "689": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "691": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "DUP3",
      "path": "0"
    },
    "692": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "ADD",
      "path": "0"
    },
    "693": {
      "op": "MSTORE"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "698": {
      "op": "DUP3"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "op": "MSTORE"
    },
    "701": {
      "op": "PUSH11",
      "value": "0x13DDDB995C880854D95B99"
    },
    "713": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "715": {
      "op": "SHL"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "718": {
      "op": "DUP3"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "op": "MSTORE"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "723": {
      "op": "ADD"
    },
    "724": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6"
    },
    "727": {
      "op": "JUMP"
    },
    "728": {
      "fn": "EtherWallet.fund",
      "offset": [
        1366,
        1409
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "729": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x40"
    },
    "731": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "732": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "733": {
      "fn": "EtherWallet.fund",
      "offset": [
        1432,
        1442
      ],
      "op": "CALLER",
      "path": "0"
    },
    "734": {
      "op": "DUP2"
    },
    "735": {
      "op": "MSTORE"
    },
    "736": {
      "fn": "EtherWallet.fund",
      "offset": [
        1444,
        1453
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "739": {
      "op": "DUP3"
    },
    "740": {
      "op": "ADD"
    },
    "741": {
      "op": "MSTORE"
    },
    "742": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5AF8184BEF8E4B45EB9F6ED7734D04DA38CED226495548F46E0C8FF8D7D9A524"
    },
    "775": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "776": {
      "op": "ADD"
    },
    "777": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "779": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "780": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "DUP1",
      "path": "0"
    },
    "781": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "782": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "SUB",
      "path": "0"
    },
    "783": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "784": {
      "fn": "EtherWallet.fund",
      "offset": [
        1425,
        1454
      ],
      "op": "LOG1",
      "path": "0"
    },
    "785": {
      "offset": [
        1223,
        1229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "787": {
      "offset": [
        1223,
        1237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "788": {
      "fn": "EtherWallet.fund",
      "offset": [
        1223,
        1237
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "789": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "792": {
      "op": "NOT"
    },
    "793": {
      "offset": [
        1223,
        1237
      ],
      "op": "AND",
      "path": "0"
    },
    "794": {
      "fn": "EtherWallet.fund",
      "offset": [
        1223,
        1237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "EtherWallet.fund",
      "offset": [
        1223,
        1237
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "796": {
      "fn": "EtherWallet.fund",
      "jump": "o",
      "offset": [
        1253,
        1461
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "a2a0f0839123a3aa1c407bb86a85757eeca6c47f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >0.6.0;\n\n/*\n * @title: EtherWallet, a crowdfunding smart contract.\n * @author: Anthony (fps) https://github.com/fps8k .\n * @dev: Ether Wallet: https://github.com/fps8k/my-solidity/tree/main/ether_wallet\n * This is a simple Solidity program that allows anyone to send ether to a wallet then allowing only the owner to withdraw.\n*/\n\ncontract EtherWallet\n{\n    // Declare owner, deploy time, ended, and locking.\n\n    address owner;\n    uint256 deploy_time;\n    bool ended;\n    bool locked;\n\n\n    // Events.\n\n    event Deployed(address, uint256);           // owner, deploy_time.\n    event Funded(address, uint256);             // msg.sender, msg.value.\n    event Withdraw(address, uint256);           // owner, address(this).balance.\n\n\n    constructor()\n    {\n        owner = msg.sender;             // Set the owner of the contract to the deployer.\n        deploy_time = block.timestamp;  // Set time of deployment.\n        ended = false;                  // Ended to control the funding.\n\n        emit Deployed(owner, deploy_time);\n    }\n\n\n\n\n    modifier NoReentrance()\n    {\n        require(!locked, \"You cannot redo this action.\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n\n\n\n    function fund() public payable NoReentrance\n    {\n        require(msg.sender != address(0), \"!Address\");\n        require(msg.sender != owner, \"Owner !Send\");\n\n        emit Funded(msg.sender, msg.value);\n    }\n\n\n\n\n    function viewFunds() public view returns(uint256 balance)\n    {\n        require(msg.sender == owner, \"!Owner\");\n        balance = address(this).balance;\n    }\n\n\n\n\n    function withdrawFunds() public payable NoReentrance\n    {\n        require(msg.sender == owner, \"!Owner\");\n        uint256 bal = address(this).balance;\n        payable(owner).transfer(address(this).balance);\n        \n        emit Withdraw(msg.sender, bal);\n    }\n}",
  "sourceMap": "379:1522:0:-:0;;;785:299;;;;;;;;;-1:-1:-1;813:5:0;:18;;-1:-1:-1;;;;;;813:18:0;821:10;813:18;;;;;;917:15;-1:-1:-1;903:29:0;;;970:5;:13;;-1:-1:-1;;970:13:0;;;1049:28;;;188:51:1;;;270:2;255:18;;248:34;;;;1049:28:0;;161:18:1;1049:28:0;;;;;;;379:1522;;;;;;",
  "sourcePath": "contracts/EtherWallet.sol",
  "type": "contract"
}