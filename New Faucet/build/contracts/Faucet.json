{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "__funder",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "__fund",
          "type": "uint256"
        }
      ],
      "name": "Fund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "__receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "__fund",
          "type": "uint256"
        }
      ],
      "name": "Pay",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "donators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "request",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Faucet.sol",
    "1": "contracts/Libraries/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/Faucet.sol",
    "exportedSymbols": {
      "Faucet": [
        299
      ],
      "SafeMath": [
        362
      ]
    },
    "id": 300,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "contracts/Libraries/SafeMath.sol",
        "file": "./Libraries/SafeMath.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 300,
        "sourceUnit": 363,
        "src": "56:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 299,
        "linearizedBaseContracts": [
          299
        ],
        "name": "Faucet",
        "nameLocation": "460:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5,
            "libraryName": {
              "id": 3,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 362,
              "src": "513:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "507:27:0",
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "526:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "collections",
            "nameLocation": "706:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "669:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8,
              "keyType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "678:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "669:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 7,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "689:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "funders",
            "nameLocation": "846:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "809:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "818:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "809:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "time",
            "nameLocation": "999:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "962:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "971:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "962:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "982:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ac62f566",
            "id": 20,
            "mutability": "mutable",
            "name": "donators",
            "nameLocation": "1089:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1072:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1072:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 19,
              "nodeType": "ArrayTypeName",
              "src": "1072:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "1151:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1135:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1135:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "interval",
            "nameLocation": "1214:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1198:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1198:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3132",
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1225:8:0",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_43200_by_1",
                "typeString": "int_const 43200"
              },
              "value": "12"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "1338:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 299,
            "src": "1333:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 26,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1333:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 33,
            "name": "Fund",
            "nameLocation": "1459:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "__funder",
                  "nameLocation": "1480:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "1464:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "__fund",
                  "nameLocation": "1506:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "1490:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1463:50:0"
            },
            "src": "1453:61:0"
          },
          {
            "anonymous": false,
            "id": 39,
            "name": "Pay",
            "nameLocation": "1572:3:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "__receiver",
                  "nameLocation": "1592:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1576:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "__fund",
                  "nameLocation": "1620:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1604:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1575:52:0"
            },
            "src": "1566:62:0"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "1797:2:0",
              "statements": []
            },
            "id": 43,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:2:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:0"
            },
            "scope": 299,
            "src": "1770:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "1830:2:0",
              "statements": []
            },
            "id": 47,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:2:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1830:0:0"
            },
            "scope": 299,
            "src": "1804:28:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "2058:240:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2129:7:0",
                        "subExpression": {
                          "id": 50,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "2130:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f205265456e7472616e6365",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2138:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3538784b52be8f41ef5fc3b6beb4a805a1e66a4d536c17df4e81404f9efba3a8",
                          "typeString": "literal_string \"No ReEntrance\""
                        },
                        "value": "No ReEntrance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3538784b52be8f41ef5fc3b6beb4a805a1e66a4d536c17df4e81404f9efba3a8",
                          "typeString": "literal_string \"No ReEntrance\""
                        }
                      ],
                      "id": 49,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2121:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:33:0"
                },
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2194:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2203:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2194:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "2194:13:0"
                },
                {
                  "id": 59,
                  "nodeType": "PlaceholderStatement",
                  "src": "2237:1:0"
                },
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2277:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2286:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2277:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:14:0"
                }
              ]
            },
            "id": 65,
            "name": "noReEntrance",
            "nameLocation": "2039:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:2:0"
            },
            "src": "2030:268:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "2514:433:0",
              "statements": [
                {
                  "assignments": [
                    73
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "2592:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 99,
                      "src": "2584:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 72,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2584:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "expression": {
                      "id": 74,
                      "name": "donators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2596:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2596:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2584:27:0"
                },
                {
                  "body": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "2692:162:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 87,
                              "name": "donators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "2759:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 89,
                            "indexExpression": {
                              "id": 88,
                              "name": "k",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "2768:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2759:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 90,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2774:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2759:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 94,
                        "nodeType": "IfStatement",
                        "src": "2755:88:0",
                        "trueBody": {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2839:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 71,
                          "id": 93,
                          "nodeType": "Return",
                          "src": "2832:11:0"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81,
                      "name": "k",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2672:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 82,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2676:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2672:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 96,
                  "initializationExpression": {
                    "assignments": [
                      78
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "k",
                        "nameLocation": "2665:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "2657:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2657:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2669:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2657:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2679:3:0",
                      "subExpression": {
                        "id": 84,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "2679:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 86,
                    "nodeType": "ExpressionStatement",
                    "src": "2679:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2652:202:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2935:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 71,
                  "id": 98,
                  "nodeType": "Return",
                  "src": "2928:12:0"
                }
              ]
            },
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasDonated",
            "nameLocation": "2454:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2473:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2465:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2464:18:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2504:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2504:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2503:6:0"
            },
            "scope": 299,
            "src": "2445:502:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 204,
              "nodeType": "Block",
              "src": "3149:1347:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3221:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3221:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3243:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3235:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 108,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3235:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3235:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3221:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2141646472657373",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3247:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccf1eca8503d0332e7f65c372c834785320d631dbfb1cefc5865d6c7613e0b5f",
                          "typeString": "literal_string \"!Address\""
                        },
                        "value": "!Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccf1eca8503d0332e7f65c372c834785320d631dbfb1cefc5865d6c7613e0b5f",
                          "typeString": "literal_string \"!Address\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3213:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3213:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "3213:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 117,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3328:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3328:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3341:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "3328:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206e65656465643a2031206574686572",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3350:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a12672cec5be0f43592fed83ec3eb1c62d8e378a360956f487264d8e8946045",
                          "typeString": "literal_string \"Amount needed: 1 ether\""
                        },
                        "value": "Amount needed: 1 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a12672cec5be0f43592fed83ec3eb1c62d8e378a360956f487264d8e8946045",
                          "typeString": "literal_string \"Amount needed: 1 ether\""
                        }
                      ],
                      "id": 116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3320:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3320:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "3320:55:0"
                },
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "3430:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "3425:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3425:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 126,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3436:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3436:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3448:7:0",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "3436:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3425:30:0"
                },
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "_fund",
                      "nameLocation": "3538:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "3533:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3533:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 137,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 133,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3546:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3546:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 135,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "3558:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3546:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3533:28:0"
                },
                {
                  "assignments": [
                    null,
                    139
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "3683:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "3675:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3675:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 147,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "3715:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 140,
                          "name": "funders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "3688:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 143,
                        "indexExpression": {
                          "expression": {
                            "id": 141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3696:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3696:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3688:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 333,
                      "src": "3688:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3672:49:0"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 148,
                        "name": "funders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3767:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "expression": {
                          "id": 149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3775:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3775:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3767:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 152,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "3789:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3767:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "3767:23:0"
                },
                {
                  "assignments": [
                    null,
                    156
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 156,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "3913:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "3905:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 155,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3905:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 161,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 159,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "3933:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 157,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3918:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tryAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 333,
                      "src": "3918:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3918:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3902:37:0"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3980:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 163,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3990:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3980:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "3980:11:0"
                },
                {
                  "condition": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4098:23:0",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 167,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4110:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4110:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 166,
                        "name": "hasDonated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "4099:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4099:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 178,
                  "nodeType": "IfStatement",
                  "src": "4094:111:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 174,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4194:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4194:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 171,
                          "name": "donators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "4180:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "4180:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                          "typeString": "function (address[] storage pointer,address)"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4180:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 177,
                    "nodeType": "ExpressionStatement",
                    "src": "4180:25:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4258:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4258:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 182,
                        "name": "_fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "4270:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 179,
                      "name": "Fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "4253:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4253:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "EmitStatement",
                  "src": "4248:28:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 185,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 125,
                      "src": "4325:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4331:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4325:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "IfStatement",
                  "src": "4321:94:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 194,
                          "name": "bal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "4411:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 190,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4390:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4390:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4382:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 188,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4382:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4382:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "4382:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4382:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 196,
                    "nodeType": "ExpressionStatement",
                    "src": "4382:33:0"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 199,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4473:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4473:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 201,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "4485:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 198,
                      "name": "Pay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4469:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4469:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "EmitStatement",
                  "src": "4464:25:0"
                }
              ]
            },
            "functionSelector": "b60d4288",
            "id": 205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 103,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102,
                  "name": "noReEntrance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "3132:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3132:12:0"
              }
            ],
            "name": "fund",
            "nameLocation": "3110:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3114:2:0"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3149:0:0"
            },
            "scope": 299,
            "src": "3101:1395:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4719:1097:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 211,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4791:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4791:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4813:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4805:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 213,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4805:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4805:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4791:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "2141646472657373",
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4817:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccf1eca8503d0332e7f65c372c834785320d631dbfb1cefc5865d6c7613e0b5f",
                          "typeString": "literal_string \"!Address\""
                        },
                        "value": "!Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccf1eca8503d0332e7f65c372c834785320d631dbfb1cefc5865d6c7613e0b5f",
                          "typeString": "literal_string \"!Address\""
                        }
                      ],
                      "id": 210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4783:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4783:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "4783:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 222,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "4902:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4912:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4902:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "576520686176652072756e206f7574206f66206574686572",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4915:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93d57f95c28ba3a9a43e4a270f38b192c6259fb9a7fcf44f3ec331c123eb3172",
                          "typeString": "literal_string \"We have run out of ether\""
                        },
                        "value": "We have run out of ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93d57f95c28ba3a9a43e4a270f38b192c6259fb9a7fcf44f3ec331c123eb3172",
                          "typeString": "literal_string \"We have run out of ether\""
                        }
                      ],
                      "id": 221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4894:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4894:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "4894:48:0"
                },
                {
                  "assignments": [
                    229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 229,
                      "mutability": "mutable",
                      "name": "last_time",
                      "nameLocation": "5010:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5002:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 228,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5002:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 234,
                  "initialValue": {
                    "baseExpression": {
                      "id": 230,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "5022:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 233,
                    "indexExpression": {
                      "expression": {
                        "id": 231,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5027:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5027:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5022:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5002:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 236,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5128:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5128:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 238,
                                "name": "last_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "5146:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5128:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 240,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5127:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 241,
                          "name": "interval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "5159:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5127:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e206f6e6c7920776974686472617720657665727920313220686f75727321",
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5169:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28001d161370cc516b40a25b719566861a7a85cebae6e3e4bd6015a2420ce6ba",
                          "typeString": "literal_string \"You can only withdraw every 12 hours!\""
                        },
                        "value": "You can only withdraw every 12 hours!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28001d161370cc516b40a25b719566861a7a85cebae6e3e4bd6015a2420ce6ba",
                          "typeString": "literal_string \"You can only withdraw every 12 hours!\""
                        }
                      ],
                      "id": 235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5119:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5119:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "5119:90:0"
                },
                {
                  "assignments": [
                    null,
                    247
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "5272:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5264:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5264:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "302e32",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:9:0",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 248,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "5277:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trySub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 361,
                      "src": "5277:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5277:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5261:41:0"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 253,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "5345:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 254,
                      "name": "p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "5355:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5345:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "5345:11:0"
                },
                {
                  "assignments": [
                    null,
                    258
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "5426:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5421:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5421:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "302e32",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5462:9:0",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 259,
                          "name": "collections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "5431:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 262,
                        "indexExpression": {
                          "expression": {
                            "id": 260,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5443:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5443:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5431:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trySub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 361,
                      "src": "5431:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (bool,uint256)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5431:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5418:54:0"
                },
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 267,
                        "name": "collections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5528:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "expression": {
                          "id": 268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5540:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5540:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5528:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 271,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "5554:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5528:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "5528:27:0"
                },
                {
                  "expression": {
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 274,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "5606:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 277,
                      "indexExpression": {
                        "expression": {
                          "id": 275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5611:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5611:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5606:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 278,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5625:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5625:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5606:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "5606:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "302e32",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5727:9:0",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 284,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5706:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5706:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5698:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 282,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5698:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5698:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5698:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5698:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "5698:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 292,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5787:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5787:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "302e32",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5799:9:0",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        },
                        "value": "0.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000_by_1",
                          "typeString": "int_const 200000000000000000"
                        }
                      ],
                      "id": 291,
                      "name": "Pay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "5783:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "EmitStatement",
                  "src": "5778:31:0"
                }
              ]
            },
            "functionSelector": "338cdca1",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 208,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 207,
                  "name": "noReEntrance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65,
                  "src": "4702:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4702:12:0"
              }
            ],
            "name": "request",
            "nameLocation": "4677:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4684:2:0"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4719:0:0"
            },
            "scope": 299,
            "src": "4668:1148:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 300,
        "src": "451:5367:0",
        "usedErrors": []
      }
    ],
    "src": "32:5786:0"
  },
  "bytecode": "608060405261a8c060055534801561001657600080fd5b5061067f806100266000396000f3fe6080604052600436106100355760003560e01c8063338cdca11461003e578063ac62f56614610046578063b60d42881461008257005b3661003c57005b005b61003c61008a565b34801561005257600080fd5b506100666100613660046105d2565b6102b8565b6040516001600160a01b03909116815260200160405180910390f35b61003c6102e2565b60065460ff16156100d25760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064015b60405180910390fd5b6006805460ff19166001179055336101175760405162461bcd60e51b8152602060048201526008602482015267214164647265737360c01b60448201526064016100c9565b6000600454116101695760405162461bcd60e51b815260206004820152601860248201527f576520686176652072756e206f7574206f66206574686572000000000000000060448201526064016100c9565b336000908152600260205260409020546005546101868242610601565b116101e15760405162461bcd60e51b815260206004820152602560248201527f596f752063616e206f6e6c7920776974686472617720657665727920313220686044820152646f7572732160d81b60648201526084016100c9565b6004546000906101f9906702c68af0bb140000610517565b6004819055336000908152602081905260408120549193509150610225906702c68af0bb140000610517565b33600081815260208181526040808320859055600290915280822042905551929450909250906702c68af0bb1400009082818181858883f19350505050158015610273573d6000803e3d6000fd5b506040516702c68af0bb1400009033907f357b676c439b9e49b4410f8eb8680bee4223724802d8e3fd422e1756f87b475f90600090a350506006805460ff1916905550565b600381815481106102c857600080fd5b6000918252602090912001546001600160a01b0316905081565b60065460ff16156103255760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064016100c9565b6006805460ff191660011790553361036a5760405162461bcd60e51b8152602060048201526008602482015267214164647265737360c01b60448201526064016100c9565b670de0b6b3a76400003410156103bb5760405162461bcd60e51b815260206004820152601660248201527520b6b7bab73a103732b2b232b21d10189032ba3432b960511b60448201526064016100c9565b60006103cf670de0b6b3a764000034610601565b905060006103dd8234610601565b33600090815260016020526040812054919250906103fb908361053d565b336000908152600160205260408120829055600454919350915061041f908461053d565b60048190559150610431905033610564565b61047857600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916331790555b604051839033907fda8220a878ff7a89474ccffdaa31ea1ed1ffbb0207d5051afccc4fbaf81f9bcd90600090a383156104da57604051339085156108fc029086906000818181858888f193505050501580156104d8573d6000803e3d6000fd5b505b604051849033907f357b676c439b9e49b4410f8eb8680bee4223724802d8e3fd422e1756f87b475f90600090a350506006805460ff191690555050565b6000808383111561052d57506000905080610536565b50600190508183035b9250929050565b60008083830184811015610558576000809250925050610536565b60019590945092505050565b600354600090815b818110156105c857836001600160a01b03166003828154811061059157610591610618565b6000918252602090912001546001600160a01b031614156105b6575060019392505050565b806105c08161062e565b91505061056c565b5060009392505050565b6000602082840312156105e457600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610613576106136105eb565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610642576106426105eb565b506001019056fea26469706673582212204bd62a882f2c2cb28eeae2f26dd6e3660f83339aca8269a5b87280282aaa2f2c64736f6c634300080c0033",
  "bytecodeSha1": "790ef5db9be4c0323ce1f070398cb198430c5077",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Faucet",
  "coverageMap": {
    "branches": {
      "0": {
        "Faucet.fund": {
          "25": [
            3328,
            3348,
            true
          ],
          "26": [
            4099,
            4121,
            false
          ],
          "27": [
            4325,
            4332,
            false
          ]
        },
        "Faucet.hasDonated": {
          "28": [
            2759,
            2782,
            false
          ]
        },
        "Faucet.request": {
          "23": [
            4902,
            4913,
            true
          ],
          "24": [
            5127,
            5167,
            true
          ]
        }
      },
      "1": {
        "SafeMath.tryAdd": {
          "30": [
            363,
            368,
            false
          ]
        },
        "SafeMath.trySub": {
          "29": [
            693,
            698,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Faucet.fund": {
          "8": [
            3213,
            3258
          ],
          "9": [
            3320,
            3375
          ],
          "10": [
            3767,
            3790
          ],
          "11": [
            3980,
            3991
          ],
          "12": [
            4180,
            4205
          ],
          "13": [
            4248,
            4276
          ],
          "14": [
            4382,
            4415
          ],
          "15": [
            4464,
            4489
          ]
        },
        "Faucet.hasDonated": {
          "20": [
            2832,
            2843
          ],
          "21": [
            2679,
            2682
          ],
          "22": [
            2928,
            2940
          ]
        },
        "Faucet.request": {
          "0": [
            4783,
            4828
          ],
          "1": [
            4894,
            4942
          ],
          "2": [
            5119,
            5209
          ],
          "3": [
            5345,
            5356
          ],
          "4": [
            5528,
            5555
          ],
          "5": [
            5606,
            5640
          ],
          "6": [
            5698,
            5737
          ],
          "7": [
            5778,
            5809
          ]
        }
      },
      "1": {
        "SafeMath.tryAdd": {
          "18": [
            370,
            387
          ],
          "19": [
            401,
            417
          ]
        },
        "SafeMath.trySub": {
          "16": [
            700,
            717
          ],
          "17": [
            731,
            751
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "6080604052600436106100355760003560e01c8063338cdca11461003e578063ac62f56614610046578063b60d42881461008257005b3661003c57005b005b61003c61008a565b34801561005257600080fd5b506100666100613660046105d2565b6102b8565b6040516001600160a01b03909116815260200160405180910390f35b61003c6102e2565b60065460ff16156100d25760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064015b60405180910390fd5b6006805460ff19166001179055336101175760405162461bcd60e51b8152602060048201526008602482015267214164647265737360c01b60448201526064016100c9565b6000600454116101695760405162461bcd60e51b815260206004820152601860248201527f576520686176652072756e206f7574206f66206574686572000000000000000060448201526064016100c9565b336000908152600260205260409020546005546101868242610601565b116101e15760405162461bcd60e51b815260206004820152602560248201527f596f752063616e206f6e6c7920776974686472617720657665727920313220686044820152646f7572732160d81b60648201526084016100c9565b6004546000906101f9906702c68af0bb140000610517565b6004819055336000908152602081905260408120549193509150610225906702c68af0bb140000610517565b33600081815260208181526040808320859055600290915280822042905551929450909250906702c68af0bb1400009082818181858883f19350505050158015610273573d6000803e3d6000fd5b506040516702c68af0bb1400009033907f357b676c439b9e49b4410f8eb8680bee4223724802d8e3fd422e1756f87b475f90600090a350506006805460ff1916905550565b600381815481106102c857600080fd5b6000918252602090912001546001600160a01b0316905081565b60065460ff16156103255760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064016100c9565b6006805460ff191660011790553361036a5760405162461bcd60e51b8152602060048201526008602482015267214164647265737360c01b60448201526064016100c9565b670de0b6b3a76400003410156103bb5760405162461bcd60e51b815260206004820152601660248201527520b6b7bab73a103732b2b232b21d10189032ba3432b960511b60448201526064016100c9565b60006103cf670de0b6b3a764000034610601565b905060006103dd8234610601565b33600090815260016020526040812054919250906103fb908361053d565b336000908152600160205260408120829055600454919350915061041f908461053d565b60048190559150610431905033610564565b61047857600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916331790555b604051839033907fda8220a878ff7a89474ccffdaa31ea1ed1ffbb0207d5051afccc4fbaf81f9bcd90600090a383156104da57604051339085156108fc029086906000818181858888f193505050501580156104d8573d6000803e3d6000fd5b505b604051849033907f357b676c439b9e49b4410f8eb8680bee4223724802d8e3fd422e1756f87b475f90600090a350506006805460ff191690555050565b6000808383111561052d57506000905080610536565b50600190508183035b9250929050565b60008083830184811015610558576000809250925050610536565b60019590945092505050565b600354600090815b818110156105c857836001600160a01b03166003828154811061059157610591610618565b6000918252602090912001546001600160a01b031614156105b6575060019392505050565b806105c08161062e565b91505061056c565b5060009392505050565b6000602082840312156105e457600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610613576106136105eb565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610642576106426105eb565b506001019056fea26469706673582212204bd62a882f2c2cb28eeae2f26dd6e3660f83339aca8269a5b87280282aaa2f2c64736f6c634300080c0033",
  "deployedSourceMap": "451:5367:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4668:1148;;;:::i;1072:25::-;;;;;;;;;;-1:-1:-1;1072:25:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:2;;;345:51;;333:2;318:18;1072:25:0;;;;;;;3101:1395;;;:::i;4668:1148::-;2130:6;;;;2129:7;2121:33;;;;-1:-1:-1;;;2121:33:0;;609:2:2;2121:33:0;;;591:21:2;648:2;628:18;;;621:30;-1:-1:-1;;;667:18:2;;;660:43;720:18;;2121:33:0;;;;;;;;;2194:6;:13;;-1:-1:-1;;2194:13:0;2203:4;2194:13;;;4791:10:::1;4783:45;;;::::0;-1:-1:-1;;;4783:45:0;;951:2:2;4783:45:0::1;::::0;::::1;933:21:2::0;990:1;970:18;;;963:29;-1:-1:-1;;;1008:18:2;;;1001:38;1056:18;;4783:45:0::1;749:331:2::0;4783:45:0::1;4912:1;4902:7;;:11;4894:48;;;::::0;-1:-1:-1;;;4894:48:0;;1287:2:2;4894:48:0::1;::::0;::::1;1269:21:2::0;1326:2;1306:18;;;1299:30;1365:26;1345:18;;;1338:54;1409:18;;4894:48:0::1;1085:348:2::0;4894:48:0::1;5027:10;5002:17;5022:16:::0;;;:4:::1;:16;::::0;;;;;5159:8:::1;::::0;5128:27:::1;5022:16:::0;5128:15:::1;:27;:::i;:::-;5127:40;5119:90;;;::::0;-1:-1:-1;;;5119:90:0;;1902:2:2;5119:90:0::1;::::0;::::1;1884:21:2::0;1941:2;1921:18;;;1914:30;1980:34;1960:18;;;1953:62;-1:-1:-1;;;2031:18:2;;;2024:35;2076:19;;5119:90:0::1;1700:401:2::0;5119:90:0::1;5277:7;::::0;5264:9:::1;::::0;5277:25:::1;::::0;5292:9:::1;5277:14;:25::i;:::-;5345:7;:11:::0;;;5443:10:::1;5421:6;5431:23:::0;;;::::1;::::0;;;;;;;5261:41;;-1:-1:-1;5421:6:0;-1:-1:-1;5431:41:0::1;::::0;5462:9:::1;5431:30;:41::i;:::-;5540:10;5528:11;:23:::0;;;::::1;::::0;;;;;;;:27;;;5606:4:::1;:16:::0;;;;;;5625:15:::1;5606:34:::0;;5698:39;5418:54;;-1:-1:-1;5540:10:0;;-1:-1:-1;5528:11:0;5727:9:::1;::::0;5528:11;5698:39;5528:11;5698:39;5727:9;5540:10;5528:11;5698:39:::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5783:26:0::1;::::0;5799:9:::1;::::0;5787:10:::1;::::0;5783:26:::1;::::0;;;::::1;-1:-1:-1::0;;2277:6:0;:14;;-1:-1:-1;;2277:14:0;;;-1:-1:-1;4668:1148:0:o;1072:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1072:25:0;;-1:-1:-1;1072:25:0;:::o;3101:1395::-;2130:6;;;;2129:7;2121:33;;;;-1:-1:-1;;;2121:33:0;;609:2:2;2121:33:0;;;591:21:2;648:2;628:18;;;621:30;-1:-1:-1;;;667:18:2;;;660:43;720:18;;2121:33:0;407:337:2;2121:33:0;2194:6;:13;;-1:-1:-1;;2194:13:0;2203:4;2194:13;;;3221:10:::1;3213:45;;;::::0;-1:-1:-1;;;3213:45:0;;951:2:2;3213:45:0::1;::::0;::::1;933:21:2::0;990:1;970:18;;;963:29;-1:-1:-1;;;1008:18:2;;;1001:38;1056:18;;3213:45:0::1;749:331:2::0;3213:45:0::1;3341:7;3328:9;:20;;3320:55;;;::::0;-1:-1:-1;;;3320:55:0;;2308:2:2;3320:55:0::1;::::0;::::1;2290:21:2::0;2347:2;2327:18;;;2320:30;-1:-1:-1;;;2366:18:2;;;2359:52;2428:18;;3320:55:0::1;2106:346:2::0;3320:55:0::1;3425:8;3436:19;3448:7;3436:9;:19;:::i;:::-;3425:30:::0;-1:-1:-1;3533:10:0::1;3546:15;3425:30:::0;3546:9:::1;:15;:::i;:::-;3696:10;3675:9;3688:19:::0;;;:7:::1;:19;::::0;;;;;3533:28;;-1:-1:-1;3675:9:0;3688:33:::1;::::0;3533:28;3688:26:::1;:33::i;:::-;3775:10;3767:19;::::0;;;:7:::1;:19;::::0;;;;:23;;;3918:7:::1;::::0;3672:49;;-1:-1:-1;3767:19:0;-1:-1:-1;3918:21:0::1;::::0;3933:5;3918:14:::1;:21::i;:::-;3980:7;:11:::0;;;3902:37;-1:-1:-1;4099:22:0::1;::::0;-1:-1:-1;4110:10:0::1;4099;:22::i;:::-;4094:111;;4180:8;:25:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4180:25:0;;;;;::::1;::::0;;-1:-1:-1;;;;;;4180:25:0::1;4194:10;4180:25;::::0;;4094:111:::1;4253:23;::::0;4270:5;;4258:10:::1;::::0;4253:23:::1;::::0;;;::::1;4325:7:::0;;4321:94:::1;;4382:33;::::0;4390:10:::1;::::0;4382:33;::::1;;;::::0;4411:3;;4382:33:::1;::::0;;;4411:3;4390:10;4382:33;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4321:94;4469:20;::::0;4485:3;;4473:10:::1;::::0;4469:20:::1;::::0;;;::::1;-1:-1:-1::0;;2277:6:0;:14;;-1:-1:-1;;2277:14:0;;;-1:-1:-1;;3101:1395:0:o;579:189:1:-;640:4;646:7;697:1;693;:5;689:28;;;-1:-1:-1;708:5:1;;-1:-1:-1;708:5:1;700:17;;689:28;-1:-1:-1;739:4:1;;-1:-1:-1;745:5:1;;;579:189;;;;;;:::o;218:216::-;279:4;;340:5;;;363;;;359:28;;;378:5;385:1;370:17;;;;;;;359:28;409:4;;415:1;;-1:-1:-1;218:216:1;-1:-1:-1;;;218:216:1:o;2445:502:0:-;2596:8;:15;2504:4;;;2652:202;2676:1;2672;:5;2652:202;;;2774:8;-1:-1:-1;;;;;2759:23:0;:8;2768:1;2759:11;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2759:11:0;:23;2755:88;;;-1:-1:-1;2839:4:0;;2445:502;-1:-1:-1;;;2445:502:0:o;2755:88::-;2679:3;;;;:::i;:::-;;;;2652:202;;;-1:-1:-1;2935:5:0;;2445:502;-1:-1:-1;;;2445:502:0:o;14:180:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:2;;14:180;-1:-1:-1;14:180:2:o;1438:127::-;1499:10;1494:3;1490:20;1487:1;1480:31;1530:4;1527:1;1520:15;1554:4;1551:1;1544:15;1570:125;1610:4;1638:1;1635;1632:8;1629:34;;;1643:18;;:::i;:::-;-1:-1:-1;1680:9:2;;1570:125::o;2457:127::-;2518:10;2513:3;2509:20;2506:1;2499:31;2549:4;2546:1;2539:15;2573:4;2570:1;2563:15;2589:135;2628:3;-1:-1:-1;;2649:17:2;;2646:43;;;2669:18;;:::i;:::-;-1:-1:-1;2716:1:2;2705:13;;2589:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    451,
    5818
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x338CDCA1 EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0xAC62F566 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x82 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x3C JUMPI STOP JUMPDEST STOP JUMPDEST PUSH2 0x3C PUSH2 0x8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0x61 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F205265456E7472616E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER PUSH2 0x117 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2141646472657373 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x169 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576520686176652072756E206F7574206F662065746865720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x186 DUP3 TIMESTAMP PUSH2 0x601 JUMP JUMPDEST GT PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C792077697468647261772065766572792031322068 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6F75727321 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1F9 SWAP1 PUSH8 0x2C68AF0BB140000 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x225 SWAP1 PUSH8 0x2C68AF0BB140000 PUSH2 0x517 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH8 0x2C68AF0BB140000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x273 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH8 0x2C68AF0BB140000 SWAP1 CALLER SWAP1 PUSH32 0x357B676C439B9E49B4410F8EB8680BEE4223724802D8E3FD422E1756F87B475F SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F205265456E7472616E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2141646472657373 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x20B6B7BAB73A103732B2B232B21D10189032BA3432B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CF PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x601 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3DD DUP3 CALLVALUE PUSH2 0x601 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x3FB SWAP1 DUP4 PUSH2 0x53D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x4 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x41F SWAP1 DUP5 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE SWAP2 POP PUSH2 0x431 SWAP1 POP CALLER PUSH2 0x564 JUMP JUMPDEST PUSH2 0x478 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 CALLER SWAP1 PUSH32 0xDA8220A878FF7A89474CCFFDAA31EA1ED1FFBB0207D5051AFCCC4FBAF81F9BCD SWAP1 PUSH1 0x0 SWAP1 LOG3 DUP4 ISZERO PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 ISZERO PUSH2 0x8FC MUL SWAP1 DUP7 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 CALLER SWAP1 PUSH32 0x357B676C439B9E49B4410F8EB8680BEE4223724802D8E3FD422E1756F87B475F SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x52D JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x536 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP DUP2 DUP4 SUB JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5C8 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x591 JUMPI PUSH2 0x591 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x5B6 JUMPI POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x5C0 DUP2 PUSH2 0x62E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x56C JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x613 JUMPI PUSH2 0x613 PUSH2 0x5EB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x642 JUMPI PUSH2 0x642 PUSH2 0x5EB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xD6 0x2A DUP9 0x2F 0x2C 0x2C 0xB2 DUP15 0xEA 0xE2 CALLCODE PUSH14 0xD6E3660F83339ACA8269A5B87280 0x28 0x2A 0xAA 0x2F 0x2C PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        451,
        5818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35"
    },
    "12": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x338CDCA1"
    },
    "25": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E"
    },
    "29": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAC62F566"
    },
    "36": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46"
    },
    "40": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB60D4288"
    },
    "47": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "51": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "STOP",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C"
    },
    "58": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "STOP",
      "path": "0"
    },
    "60": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        451,
        5818
      ],
      "op": "STOP",
      "path": "0"
    },
    "62": {
      "fn": "Faucet.request",
      "offset": [
        4668,
        5816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "63": {
      "fn": "Faucet.request",
      "offset": [
        4668,
        5816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C"
    },
    "66": {
      "fn": "Faucet.request",
      "offset": [
        4668,
        5816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "69": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        4668,
        5816
      ],
      "op": "JUMP",
      "path": "0"
    },
    "70": {
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "71": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "72": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "73": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "74": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52"
    },
    "77": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "78": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "80": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "81": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "REVERT",
      "path": "0"
    },
    "82": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "83": {
      "op": "POP"
    },
    "84": {
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "87": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61"
    },
    "90": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "91": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "93": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D2"
    },
    "96": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "97": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "98": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "101": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "102": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "105": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "112": {
      "op": "SHL"
    },
    "113": {
      "op": "SUB"
    },
    "114": {
      "op": "SWAP1"
    },
    "115": {
      "op": "SWAP2"
    },
    "116": {
      "op": "AND"
    },
    "117": {
      "op": "DUP2"
    },
    "118": {
      "op": "MSTORE"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "121": {
      "op": "ADD"
    },
    "122": {
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "124": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "125": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "127": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SUB",
      "path": "0"
    },
    "128": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "129": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "RETURN",
      "path": "0"
    },
    "130": {
      "fn": "Faucet.fund",
      "offset": [
        3101,
        4496
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "131": {
      "fn": "Faucet.fund",
      "offset": [
        3101,
        4496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C"
    },
    "134": {
      "fn": "Faucet.fund",
      "offset": [
        3101,
        4496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E2"
    },
    "137": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        3101,
        4496
      ],
      "op": "JUMP",
      "path": "0"
    },
    "138": {
      "fn": "Faucet.request",
      "offset": [
        4668,
        5816
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "offset": [
        2130,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "141": {
      "fn": "Faucet.request",
      "offset": [
        2130,
        2136
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "142": {
      "fn": "Faucet.request",
      "offset": [
        2130,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "144": {
      "fn": "Faucet.request",
      "offset": [
        2130,
        2136
      ],
      "op": "AND",
      "path": "0"
    },
    "145": {
      "offset": [
        2129,
        2136
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "146": {
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2"
    },
    "149": {
      "offset": [
        2121,
        2154
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "150": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "152": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "153": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "157": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "159": {
      "op": "SHL"
    },
    "160": {
      "offset": [
        2121,
        2154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "161": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "164": {
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "166": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "DUP3",
      "path": "0"
    },
    "167": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "ADD",
      "path": "0"
    },
    "168": {
      "op": "MSTORE"
    },
    "169": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "173": {
      "op": "DUP3"
    },
    "174": {
      "op": "ADD"
    },
    "175": {
      "op": "MSTORE"
    },
    "176": {
      "op": "PUSH13",
      "value": "0x4E6F205265456E7472616E6365"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "192": {
      "op": "SHL"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "195": {
      "op": "DUP3"
    },
    "196": {
      "op": "ADD"
    },
    "197": {
      "op": "MSTORE"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "200": {
      "op": "ADD"
    },
    "201": {
      "offset": [
        2121,
        2154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "202": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "204": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "205": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "DUP1",
      "path": "0"
    },
    "206": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "207": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "SUB",
      "path": "0"
    },
    "208": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "209": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "210": {
      "fn": "Faucet.request",
      "offset": [
        2121,
        2154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "211": {
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "213": {
      "offset": [
        2194,
        2207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "214": {
      "fn": "Faucet.request",
      "offset": [
        2194,
        2207
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "215": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "217": {
      "op": "NOT"
    },
    "218": {
      "offset": [
        2194,
        2207
      ],
      "op": "AND",
      "path": "0"
    },
    "219": {
      "offset": [
        2203,
        2207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "221": {
      "offset": [
        2194,
        2207
      ],
      "op": "OR",
      "path": "0"
    },
    "222": {
      "fn": "Faucet.request",
      "offset": [
        2194,
        2207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "223": {
      "fn": "Faucet.request",
      "offset": [
        2194,
        2207
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "224": {
      "fn": "Faucet.request",
      "offset": [
        4791,
        4801
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "225": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "228": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "231": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "238": {
      "op": "SHL"
    },
    "239": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "DUP2",
      "path": "0"
    },
    "240": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "243": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "245": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "DUP3",
      "path": "0"
    },
    "246": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "ADD",
      "path": "0"
    },
    "247": {
      "op": "MSTORE"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "252": {
      "op": "DUP3"
    },
    "253": {
      "op": "ADD"
    },
    "254": {
      "op": "MSTORE"
    },
    "255": {
      "op": "PUSH8",
      "value": "0x2141646472657373"
    },
    "264": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "266": {
      "op": "SHL"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "269": {
      "op": "DUP3"
    },
    "270": {
      "op": "ADD"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "274": {
      "op": "ADD"
    },
    "275": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "278": {
      "op": "JUMP"
    },
    "279": {
      "fn": "Faucet.request",
      "offset": [
        4783,
        4828
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "Faucet.request",
      "offset": [
        4912,
        4913
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "282": {
      "fn": "Faucet.request",
      "offset": [
        4902,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "284": {
      "fn": "Faucet.request",
      "offset": [
        4902,
        4909
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "285": {
      "branch": 23,
      "fn": "Faucet.request",
      "offset": [
        4902,
        4913
      ],
      "op": "GT",
      "path": "0"
    },
    "286": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169"
    },
    "289": {
      "branch": 23,
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "290": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "292": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "299": {
      "op": "SHL"
    },
    "300": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "DUP2",
      "path": "0"
    },
    "301": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "304": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "306": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "DUP3",
      "path": "0"
    },
    "307": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "ADD",
      "path": "0"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "313": {
      "op": "DUP3"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH32",
      "value": "0x576520686176652072756E206F7574206F662065746865720000000000000000"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "351": {
      "op": "DUP3"
    },
    "352": {
      "op": "ADD"
    },
    "353": {
      "op": "MSTORE"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "356": {
      "op": "ADD"
    },
    "357": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "360": {
      "op": "JUMP"
    },
    "361": {
      "fn": "Faucet.request",
      "offset": [
        4894,
        4942
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "362": {
      "fn": "Faucet.request",
      "offset": [
        5027,
        5037
      ],
      "op": "CALLER",
      "path": "0"
    },
    "363": {
      "fn": "Faucet.request",
      "offset": [
        5002,
        5019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "365": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "366": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "DUP2",
      "path": "0"
    },
    "367": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "368": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "370": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "372": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "373": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "375": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "376": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "377": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "378": {
      "fn": "Faucet.request",
      "offset": [
        5159,
        5167
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x5"
    },
    "380": {
      "fn": "Faucet.request",
      "offset": [
        5159,
        5167
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "381": {
      "fn": "Faucet.request",
      "offset": [
        5128,
        5155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x186"
    },
    "384": {
      "fn": "Faucet.request",
      "offset": [
        5022,
        5038
      ],
      "op": "DUP3",
      "path": "0"
    },
    "385": {
      "fn": "Faucet.request",
      "offset": [
        5128,
        5143
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "386": {
      "fn": "Faucet.request",
      "offset": [
        5128,
        5155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "389": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        5128,
        5155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "390": {
      "fn": "Faucet.request",
      "offset": [
        5128,
        5155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "391": {
      "branch": 24,
      "fn": "Faucet.request",
      "offset": [
        5127,
        5167
      ],
      "op": "GT",
      "path": "0"
    },
    "392": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "395": {
      "branch": 24,
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "396": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "398": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "DUP2",
      "path": "0"
    },
    "407": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "410": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "412": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "DUP3",
      "path": "0"
    },
    "413": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "ADD",
      "path": "0"
    },
    "414": {
      "op": "MSTORE"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "419": {
      "op": "DUP3"
    },
    "420": {
      "op": "ADD"
    },
    "421": {
      "op": "MSTORE"
    },
    "422": {
      "op": "PUSH32",
      "value": "0x596F752063616E206F6E6C792077697468647261772065766572792031322068"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "457": {
      "op": "DUP3"
    },
    "458": {
      "op": "ADD"
    },
    "459": {
      "op": "MSTORE"
    },
    "460": {
      "op": "PUSH5",
      "value": "0x6F75727321"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "471": {
      "op": "DUP3"
    },
    "472": {
      "op": "ADD"
    },
    "473": {
      "op": "MSTORE"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "480": {
      "op": "JUMP"
    },
    "481": {
      "fn": "Faucet.request",
      "offset": [
        5119,
        5209
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "482": {
      "fn": "Faucet.request",
      "offset": [
        5277,
        5284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "484": {
      "fn": "Faucet.request",
      "offset": [
        5277,
        5284
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "485": {
      "fn": "Faucet.request",
      "offset": [
        5264,
        5273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "487": {
      "fn": "Faucet.request",
      "offset": [
        5264,
        5273
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "488": {
      "fn": "Faucet.request",
      "offset": [
        5277,
        5302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9"
    },
    "491": {
      "fn": "Faucet.request",
      "offset": [
        5277,
        5302
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "492": {
      "fn": "Faucet.request",
      "offset": [
        5292,
        5301
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0x2C68AF0BB140000"
    },
    "501": {
      "fn": "Faucet.request",
      "offset": [
        5277,
        5291
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x517"
    },
    "504": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        5277,
        5302
      ],
      "op": "JUMP",
      "path": "0"
    },
    "505": {
      "fn": "Faucet.request",
      "offset": [
        5277,
        5302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "506": {
      "fn": "Faucet.request",
      "offset": [
        5345,
        5352
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x4"
    },
    "508": {
      "fn": "Faucet.request",
      "offset": [
        5345,
        5356
      ],
      "op": "DUP2",
      "path": "0"
    },
    "509": {
      "fn": "Faucet.request",
      "offset": [
        5345,
        5356
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "510": {
      "fn": "Faucet.request",
      "offset": [
        5345,
        5356
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "511": {
      "fn": "Faucet.request",
      "offset": [
        5443,
        5453
      ],
      "op": "CALLER",
      "path": "0"
    },
    "512": {
      "fn": "Faucet.request",
      "offset": [
        5421,
        5427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "514": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "515": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "DUP2",
      "path": "0"
    },
    "516": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "517": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "519": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "DUP2",
      "path": "0"
    },
    "520": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "521": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "522": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "524": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "DUP2",
      "path": "0"
    },
    "525": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "526": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5454
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "527": {
      "fn": "Faucet.request",
      "offset": [
        5261,
        5302
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "528": {
      "fn": "Faucet.request",
      "offset": [
        5261,
        5302
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "529": {
      "op": "POP"
    },
    "530": {
      "fn": "Faucet.request",
      "offset": [
        5421,
        5427
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x225"
    },
    "535": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "536": {
      "fn": "Faucet.request",
      "offset": [
        5462,
        5471
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0x2C68AF0BB140000"
    },
    "545": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x517"
    },
    "548": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        5431,
        5472
      ],
      "op": "JUMP",
      "path": "0"
    },
    "549": {
      "fn": "Faucet.request",
      "offset": [
        5431,
        5472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "550": {
      "fn": "Faucet.request",
      "offset": [
        5540,
        5550
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 4
    },
    "551": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "553": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "554": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "555": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "556": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "558": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "559": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "DUP2",
      "path": "0"
    },
    "560": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "561": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "563": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "DUP1",
      "path": "0"
    },
    "564": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "DUP4",
      "path": "0"
    },
    "565": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5551
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "566": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5555
      ],
      "op": "DUP6",
      "path": "0"
    },
    "567": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5555
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "568": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5555
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "569": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5610
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x2"
    },
    "571": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "572": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5622
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "573": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5622
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "574": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5622
      ],
      "op": "DUP1",
      "path": "0"
    },
    "575": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5622
      ],
      "op": "DUP3",
      "path": "0"
    },
    "576": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5622
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "577": {
      "fn": "Faucet.request",
      "offset": [
        5625,
        5640
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "578": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5640
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "579": {
      "fn": "Faucet.request",
      "offset": [
        5606,
        5640
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "580": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 6
    },
    "581": {
      "fn": "Faucet.request",
      "offset": [
        5418,
        5472
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "582": {
      "fn": "Faucet.request",
      "offset": [
        5418,
        5472
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "Faucet.request",
      "offset": [
        5540,
        5550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "Faucet.request",
      "offset": [
        5540,
        5550
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "588": {
      "fn": "Faucet.request",
      "offset": [
        5727,
        5736
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0x2C68AF0BB140000"
    },
    "597": {
      "fn": "Faucet.request",
      "offset": [
        5727,
        5736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "598": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5539
      ],
      "op": "DUP3",
      "path": "0"
    },
    "599": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "600": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5539
      ],
      "op": "DUP2",
      "path": "0"
    },
    "601": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "DUP2",
      "path": "0"
    },
    "602": {
      "fn": "Faucet.request",
      "offset": [
        5727,
        5736
      ],
      "op": "DUP6",
      "path": "0"
    },
    "603": {
      "fn": "Faucet.request",
      "offset": [
        5540,
        5550
      ],
      "op": "DUP9",
      "path": "0"
    },
    "604": {
      "fn": "Faucet.request",
      "offset": [
        5528,
        5539
      ],
      "op": "DUP4",
      "path": "0"
    },
    "605": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "CALL",
      "path": "0"
    },
    "606": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "607": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "POP",
      "path": "0"
    },
    "608": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "POP",
      "path": "0"
    },
    "609": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "POP",
      "path": "0"
    },
    "610": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "POP",
      "path": "0"
    },
    "611": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "612": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "DUP1",
      "path": "0"
    },
    "613": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "614": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x273"
    },
    "617": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "618": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "619": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "621": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "DUP1",
      "path": "0"
    },
    "622": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "623": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "624": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "626": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "REVERT",
      "path": "0"
    },
    "627": {
      "fn": "Faucet.request",
      "offset": [
        5698,
        5737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "fn": "Faucet.request",
      "offset": [
        5783,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x40"
    },
    "631": {
      "fn": "Faucet.request",
      "offset": [
        5783,
        5809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "632": {
      "fn": "Faucet.request",
      "offset": [
        5799,
        5808
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0x2C68AF0BB140000"
    },
    "641": {
      "fn": "Faucet.request",
      "offset": [
        5799,
        5808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "642": {
      "fn": "Faucet.request",
      "offset": [
        5787,
        5797
      ],
      "op": "CALLER",
      "path": "0"
    },
    "643": {
      "fn": "Faucet.request",
      "offset": [
        5787,
        5797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "644": {
      "fn": "Faucet.request",
      "offset": [
        5783,
        5809
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x357B676C439B9E49B4410F8EB8680BEE4223724802D8E3FD422E1756F87B475F"
    },
    "677": {
      "fn": "Faucet.request",
      "offset": [
        5783,
        5809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "678": {
      "fn": "Faucet.request",
      "offset": [
        5783,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "680": {
      "fn": "Faucet.request",
      "offset": [
        5783,
        5809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "681": {
      "fn": "Faucet.request",
      "offset": [
        5783,
        5809
      ],
      "op": "LOG3",
      "path": "0"
    },
    "682": {
      "op": "POP"
    },
    "683": {
      "op": "POP"
    },
    "684": {
      "offset": [
        2277,
        2283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "686": {
      "offset": [
        2277,
        2291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "687": {
      "fn": "Faucet.request",
      "offset": [
        2277,
        2291
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "690": {
      "op": "NOT"
    },
    "691": {
      "offset": [
        2277,
        2291
      ],
      "op": "AND",
      "path": "0"
    },
    "692": {
      "fn": "Faucet.request",
      "offset": [
        2277,
        2291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "693": {
      "fn": "Faucet.request",
      "offset": [
        2277,
        2291
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "fn": "Faucet.request",
      "jump": "o",
      "offset": [
        4668,
        5816
      ],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "699": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "700": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "701": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "702": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "703": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "LT",
      "path": "0"
    },
    "704": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "707": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "708": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "710": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP1",
      "path": "0"
    },
    "711": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "REVERT",
      "path": "0"
    },
    "712": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "715": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "716": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "DUP3",
      "path": "0"
    },
    "717": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "718": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "720": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "721": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "722": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "723": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "ADD",
      "path": "0"
    },
    "724": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "731": {
      "op": "SHL"
    },
    "732": {
      "op": "SUB"
    },
    "733": {
      "offset": [
        1072,
        1097
      ],
      "op": "AND",
      "path": "0"
    },
    "734": {
      "fn": "Faucet.request",
      "offset": [
        1072,
        1097
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "offset": [
        1072,
        1097
      ],
      "op": "DUP2",
      "path": "0"
    },
    "737": {
      "fn": "Faucet.request",
      "jump": "o",
      "offset": [
        1072,
        1097
      ],
      "op": "JUMP",
      "path": "0"
    },
    "738": {
      "fn": "Faucet.fund",
      "offset": [
        3101,
        4496
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "739": {
      "offset": [
        2130,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "741": {
      "fn": "Faucet.fund",
      "offset": [
        2130,
        2136
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "742": {
      "fn": "Faucet.fund",
      "offset": [
        2130,
        2136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "744": {
      "fn": "Faucet.fund",
      "offset": [
        2130,
        2136
      ],
      "op": "AND",
      "path": "0"
    },
    "745": {
      "offset": [
        2129,
        2136
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "746": {
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x325"
    },
    "749": {
      "offset": [
        2121,
        2154
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "750": {
      "fn": "Faucet.fund",
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "752": {
      "fn": "Faucet.fund",
      "offset": [
        2121,
        2154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "753": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "759": {
      "op": "SHL"
    },
    "760": {
      "offset": [
        2121,
        2154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "761": {
      "fn": "Faucet.fund",
      "offset": [
        2121,
        2154
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "764": {
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "766": {
      "fn": "Faucet.fund",
      "offset": [
        2121,
        2154
      ],
      "op": "DUP3",
      "path": "0"
    },
    "767": {
      "fn": "Faucet.fund",
      "offset": [
        2121,
        2154
      ],
      "op": "ADD",
      "path": "0"
    },
    "768": {
      "op": "MSTORE"
    },
    "769": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "773": {
      "op": "DUP3"
    },
    "774": {
      "op": "ADD"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH13",
      "value": "0x4E6F205265456E7472616E6365"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "795": {
      "op": "DUP3"
    },
    "796": {
      "op": "ADD"
    },
    "797": {
      "op": "MSTORE"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "offset": [
        2121,
        2154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "804": {
      "op": "JUMP"
    },
    "805": {
      "offset": [
        2121,
        2154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "806": {
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "808": {
      "offset": [
        2194,
        2207
      ],
      "op": "DUP1",
      "path": "0"
    },
    "809": {
      "fn": "Faucet.fund",
      "offset": [
        2194,
        2207
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "812": {
      "op": "NOT"
    },
    "813": {
      "offset": [
        2194,
        2207
      ],
      "op": "AND",
      "path": "0"
    },
    "814": {
      "offset": [
        2203,
        2207
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "816": {
      "offset": [
        2194,
        2207
      ],
      "op": "OR",
      "path": "0"
    },
    "817": {
      "fn": "Faucet.fund",
      "offset": [
        2194,
        2207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "818": {
      "fn": "Faucet.fund",
      "offset": [
        2194,
        2207
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "819": {
      "fn": "Faucet.fund",
      "offset": [
        3221,
        3231
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "820": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "823": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "824": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "826": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "827": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "831": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "833": {
      "op": "SHL"
    },
    "834": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "835": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "838": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "840": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "841": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "ADD",
      "path": "0"
    },
    "842": {
      "op": "MSTORE"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "847": {
      "op": "DUP3"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "op": "MSTORE"
    },
    "850": {
      "op": "PUSH8",
      "value": "0x2141646472657373"
    },
    "859": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "861": {
      "op": "SHL"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "869": {
      "op": "ADD"
    },
    "870": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "873": {
      "op": "JUMP"
    },
    "874": {
      "fn": "Faucet.fund",
      "offset": [
        3213,
        3258
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "875": {
      "fn": "Faucet.fund",
      "offset": [
        3341,
        3348
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 9,
      "value": "0xDE0B6B3A7640000"
    },
    "884": {
      "fn": "Faucet.fund",
      "offset": [
        3328,
        3337
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "885": {
      "fn": "Faucet.fund",
      "offset": [
        3328,
        3348
      ],
      "op": "LT",
      "path": "0"
    },
    "886": {
      "branch": 25,
      "fn": "Faucet.fund",
      "offset": [
        3328,
        3348
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "887": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3BB"
    },
    "890": {
      "branch": 25,
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "891": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "893": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "DUP2",
      "path": "0"
    },
    "902": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "905": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "907": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "DUP3",
      "path": "0"
    },
    "908": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "ADD",
      "path": "0"
    },
    "909": {
      "op": "MSTORE"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "914": {
      "op": "DUP3"
    },
    "915": {
      "op": "ADD"
    },
    "916": {
      "op": "MSTORE"
    },
    "917": {
      "op": "PUSH22",
      "value": "0x20B6B7BAB73A103732B2B232B21D10189032BA3432B9"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "945": {
      "op": "DUP3"
    },
    "946": {
      "op": "ADD"
    },
    "947": {
      "op": "MSTORE"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "954": {
      "op": "JUMP"
    },
    "955": {
      "fn": "Faucet.fund",
      "offset": [
        3320,
        3375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "956": {
      "fn": "Faucet.fund",
      "offset": [
        3425,
        3433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "958": {
      "fn": "Faucet.fund",
      "offset": [
        3436,
        3455
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CF"
    },
    "961": {
      "fn": "Faucet.fund",
      "offset": [
        3448,
        3455
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "970": {
      "fn": "Faucet.fund",
      "offset": [
        3436,
        3445
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "971": {
      "fn": "Faucet.fund",
      "offset": [
        3436,
        3455
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "974": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        3436,
        3455
      ],
      "op": "JUMP",
      "path": "0"
    },
    "975": {
      "fn": "Faucet.fund",
      "offset": [
        3436,
        3455
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "976": {
      "fn": "Faucet.fund",
      "offset": [
        3425,
        3455
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "977": {
      "op": "POP"
    },
    "978": {
      "fn": "Faucet.fund",
      "offset": [
        3533,
        3543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "980": {
      "fn": "Faucet.fund",
      "offset": [
        3546,
        3561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DD"
    },
    "983": {
      "fn": "Faucet.fund",
      "offset": [
        3425,
        3455
      ],
      "op": "DUP3",
      "path": "0"
    },
    "984": {
      "fn": "Faucet.fund",
      "offset": [
        3546,
        3555
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "985": {
      "fn": "Faucet.fund",
      "offset": [
        3546,
        3561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "988": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        3546,
        3561
      ],
      "op": "JUMP",
      "path": "0"
    },
    "989": {
      "fn": "Faucet.fund",
      "offset": [
        3546,
        3561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "990": {
      "fn": "Faucet.fund",
      "offset": [
        3696,
        3706
      ],
      "op": "CALLER",
      "path": "0"
    },
    "991": {
      "fn": "Faucet.fund",
      "offset": [
        3675,
        3684
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "993": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "994": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "995": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "996": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "998": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1000": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1001": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1003": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1004": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1005": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3707
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1006": {
      "fn": "Faucet.fund",
      "offset": [
        3533,
        3561
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1007": {
      "fn": "Faucet.fund",
      "offset": [
        3533,
        3561
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "fn": "Faucet.fund",
      "offset": [
        3675,
        3684
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1010": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FB"
    },
    "1013": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1014": {
      "fn": "Faucet.fund",
      "offset": [
        3533,
        3561
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1015": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53D"
    },
    "1018": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        3688,
        3721
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1019": {
      "fn": "Faucet.fund",
      "offset": [
        3688,
        3721
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1020": {
      "fn": "Faucet.fund",
      "offset": [
        3775,
        3785
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 10
    },
    "1021": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1023": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1024": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1025": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1026": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3774
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1028": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1030": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1031": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1033": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1034": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1035": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3790
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1036": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1037": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3790
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1038": {
      "fn": "Faucet.fund",
      "offset": [
        3918,
        3925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1040": {
      "fn": "Faucet.fund",
      "offset": [
        3918,
        3925
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1041": {
      "fn": "Faucet.fund",
      "offset": [
        3672,
        3721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1042": {
      "fn": "Faucet.fund",
      "offset": [
        3672,
        3721
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1043": {
      "op": "POP"
    },
    "1044": {
      "fn": "Faucet.fund",
      "offset": [
        3767,
        3786
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1045": {
      "op": "POP"
    },
    "1046": {
      "fn": "Faucet.fund",
      "offset": [
        3918,
        3939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41F"
    },
    "1049": {
      "fn": "Faucet.fund",
      "offset": [
        3918,
        3939
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1050": {
      "fn": "Faucet.fund",
      "offset": [
        3933,
        3938
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1051": {
      "fn": "Faucet.fund",
      "offset": [
        3918,
        3932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53D"
    },
    "1054": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        3918,
        3939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1055": {
      "fn": "Faucet.fund",
      "offset": [
        3918,
        3939
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1056": {
      "fn": "Faucet.fund",
      "offset": [
        3980,
        3987
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x4"
    },
    "1058": {
      "fn": "Faucet.fund",
      "offset": [
        3980,
        3991
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1059": {
      "fn": "Faucet.fund",
      "offset": [
        3980,
        3991
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1060": {
      "fn": "Faucet.fund",
      "offset": [
        3980,
        3991
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1061": {
      "fn": "Faucet.fund",
      "offset": [
        3902,
        3939
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "fn": "Faucet.fund",
      "offset": [
        4099,
        4121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "1066": {
      "fn": "Faucet.fund",
      "offset": [
        4099,
        4121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "fn": "Faucet.fund",
      "offset": [
        4110,
        4120
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1069": {
      "fn": "Faucet.fund",
      "offset": [
        4099,
        4109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x564"
    },
    "1072": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        4099,
        4121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1073": {
      "branch": 26,
      "fn": "Faucet.fund",
      "offset": [
        4099,
        4121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1074": {
      "fn": "Faucet.fund",
      "offset": [
        4094,
        4205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "1077": {
      "branch": 26,
      "fn": "Faucet.fund",
      "offset": [
        4094,
        4205
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1078": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4188
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x3"
    },
    "1080": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1081": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1082": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1084": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1085": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "ADD",
      "path": "0"
    },
    "1086": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1087": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1090": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1091": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1092": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1093": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1094": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "1127": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "ADD",
      "path": "0"
    },
    "1128": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1129": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1136": {
      "op": "SHL"
    },
    "1137": {
      "op": "SUB"
    },
    "1138": {
      "op": "NOT"
    },
    "1139": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "AND",
      "path": "0"
    },
    "1140": {
      "fn": "Faucet.fund",
      "offset": [
        4194,
        4204
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1141": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "OR",
      "path": "0"
    },
    "1142": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1143": {
      "fn": "Faucet.fund",
      "offset": [
        4180,
        4205
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1144": {
      "fn": "Faucet.fund",
      "offset": [
        4094,
        4205
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1145": {
      "fn": "Faucet.fund",
      "offset": [
        4253,
        4276
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "1147": {
      "fn": "Faucet.fund",
      "offset": [
        4253,
        4276
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1148": {
      "fn": "Faucet.fund",
      "offset": [
        4270,
        4275
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1149": {
      "fn": "Faucet.fund",
      "offset": [
        4270,
        4275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1150": {
      "fn": "Faucet.fund",
      "offset": [
        4258,
        4268
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1151": {
      "fn": "Faucet.fund",
      "offset": [
        4258,
        4268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1152": {
      "fn": "Faucet.fund",
      "offset": [
        4253,
        4276
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDA8220A878FF7A89474CCFFDAA31EA1ED1FFBB0207D5051AFCCC4FBAF81F9BCD"
    },
    "1185": {
      "fn": "Faucet.fund",
      "offset": [
        4253,
        4276
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1186": {
      "fn": "Faucet.fund",
      "offset": [
        4253,
        4276
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1188": {
      "fn": "Faucet.fund",
      "offset": [
        4253,
        4276
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1189": {
      "fn": "Faucet.fund",
      "offset": [
        4253,
        4276
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1190": {
      "fn": "Faucet.fund",
      "offset": [
        4325,
        4332
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1191": {
      "branch": 27,
      "fn": "Faucet.fund",
      "offset": [
        4325,
        4332
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1192": {
      "fn": "Faucet.fund",
      "offset": [
        4321,
        4415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DA"
    },
    "1195": {
      "branch": 27,
      "fn": "Faucet.fund",
      "offset": [
        4321,
        4415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1196": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x40"
    },
    "1198": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1199": {
      "fn": "Faucet.fund",
      "offset": [
        4390,
        4400
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1200": {
      "fn": "Faucet.fund",
      "offset": [
        4390,
        4400
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1201": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1202": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1203": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "1206": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "MUL",
      "path": "0"
    },
    "1207": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1208": {
      "fn": "Faucet.fund",
      "offset": [
        4411,
        4414
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1209": {
      "fn": "Faucet.fund",
      "offset": [
        4411,
        4414
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1210": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1212": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1213": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1214": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1215": {
      "fn": "Faucet.fund",
      "offset": [
        4411,
        4414
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1216": {
      "fn": "Faucet.fund",
      "offset": [
        4390,
        4400
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1217": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1218": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "CALL",
      "path": "0"
    },
    "1219": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1220": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "POP",
      "path": "0"
    },
    "1221": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "POP",
      "path": "0"
    },
    "1222": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "POP",
      "path": "0"
    },
    "1223": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "POP",
      "path": "0"
    },
    "1224": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1225": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1226": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1227": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "1230": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1231": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1232": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1234": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1235": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1236": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1237": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1239": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1240": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "fn": "Faucet.fund",
      "offset": [
        4382,
        4415
      ],
      "op": "POP",
      "path": "0"
    },
    "1242": {
      "fn": "Faucet.fund",
      "offset": [
        4321,
        4415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1243": {
      "fn": "Faucet.fund",
      "offset": [
        4469,
        4489
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "1245": {
      "fn": "Faucet.fund",
      "offset": [
        4469,
        4489
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1246": {
      "fn": "Faucet.fund",
      "offset": [
        4485,
        4488
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1247": {
      "fn": "Faucet.fund",
      "offset": [
        4485,
        4488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1248": {
      "fn": "Faucet.fund",
      "offset": [
        4473,
        4483
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1249": {
      "fn": "Faucet.fund",
      "offset": [
        4473,
        4483
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1250": {
      "fn": "Faucet.fund",
      "offset": [
        4469,
        4489
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x357B676C439B9E49B4410F8EB8680BEE4223724802D8E3FD422E1756F87B475F"
    },
    "1283": {
      "fn": "Faucet.fund",
      "offset": [
        4469,
        4489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1284": {
      "fn": "Faucet.fund",
      "offset": [
        4469,
        4489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1286": {
      "fn": "Faucet.fund",
      "offset": [
        4469,
        4489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1287": {
      "fn": "Faucet.fund",
      "offset": [
        4469,
        4489
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1288": {
      "op": "POP"
    },
    "1289": {
      "op": "POP"
    },
    "1290": {
      "offset": [
        2277,
        2283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1292": {
      "offset": [
        2277,
        2291
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1293": {
      "fn": "Faucet.fund",
      "offset": [
        2277,
        2291
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1296": {
      "op": "NOT"
    },
    "1297": {
      "offset": [
        2277,
        2291
      ],
      "op": "AND",
      "path": "0"
    },
    "1298": {
      "fn": "Faucet.fund",
      "offset": [
        2277,
        2291
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1299": {
      "fn": "Faucet.fund",
      "offset": [
        2277,
        2291
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1300": {
      "op": "POP"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "fn": "Faucet.fund",
      "jump": "o",
      "offset": [
        3101,
        4496
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1303": {
      "fn": "SafeMath.trySub",
      "offset": [
        579,
        768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1304": {
      "fn": "SafeMath.trySub",
      "offset": [
        640,
        644
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1306": {
      "fn": "SafeMath.trySub",
      "offset": [
        646,
        653
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1307": {
      "fn": "SafeMath.trySub",
      "offset": [
        697,
        698
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1308": {
      "fn": "SafeMath.trySub",
      "offset": [
        693,
        694
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1309": {
      "branch": 29,
      "fn": "SafeMath.trySub",
      "offset": [
        693,
        698
      ],
      "op": "GT",
      "path": "1"
    },
    "1310": {
      "fn": "SafeMath.trySub",
      "offset": [
        689,
        717
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1311": {
      "fn": "SafeMath.trySub",
      "offset": [
        689,
        717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52D"
    },
    "1314": {
      "branch": 29,
      "fn": "SafeMath.trySub",
      "offset": [
        689,
        717
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "SafeMath.trySub",
      "offset": [
        708,
        713
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x0"
    },
    "1318": {
      "fn": "SafeMath.trySub",
      "offset": [
        708,
        713
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1319": {
      "op": "POP"
    },
    "1320": {
      "fn": "SafeMath.trySub",
      "offset": [
        708,
        713
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1321": {
      "fn": "SafeMath.trySub",
      "offset": [
        700,
        717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x536"
    },
    "1324": {
      "fn": "SafeMath.trySub",
      "offset": [
        700,
        717
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1325": {
      "fn": "SafeMath.trySub",
      "offset": [
        689,
        717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "fn": "SafeMath.trySub",
      "offset": [
        739,
        743
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "1329": {
      "fn": "SafeMath.trySub",
      "offset": [
        739,
        743
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1330": {
      "op": "POP"
    },
    "1331": {
      "fn": "SafeMath.trySub",
      "offset": [
        745,
        750
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1332": {
      "fn": "SafeMath.trySub",
      "offset": [
        745,
        750
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1333": {
      "fn": "SafeMath.trySub",
      "offset": [
        745,
        750
      ],
      "op": "SUB",
      "path": "1"
    },
    "1334": {
      "fn": "SafeMath.trySub",
      "offset": [
        579,
        768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1335": {
      "fn": "SafeMath.trySub",
      "offset": [
        579,
        768
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1336": {
      "fn": "SafeMath.trySub",
      "offset": [
        579,
        768
      ],
      "op": "POP",
      "path": "1"
    },
    "1337": {
      "fn": "SafeMath.trySub",
      "offset": [
        579,
        768
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1338": {
      "fn": "SafeMath.trySub",
      "offset": [
        579,
        768
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1339": {
      "fn": "SafeMath.trySub",
      "offset": [
        579,
        768
      ],
      "op": "POP",
      "path": "1"
    },
    "1340": {
      "fn": "SafeMath.trySub",
      "jump": "o",
      "offset": [
        579,
        768
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1341": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        218,
        434
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1342": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        279,
        283
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1344": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        279,
        283
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1345": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        340,
        345
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1346": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        340,
        345
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1347": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        340,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "1348": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        363,
        368
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1349": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        363,
        368
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1350": {
      "branch": 30,
      "fn": "SafeMath.tryAdd",
      "offset": [
        363,
        368
      ],
      "op": "LT",
      "path": "1"
    },
    "1351": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        359,
        387
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1352": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        359,
        387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x558"
    },
    "1355": {
      "branch": 30,
      "fn": "SafeMath.tryAdd",
      "offset": [
        359,
        387
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1356": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        378,
        383
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x0"
    },
    "1358": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        385,
        386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1359": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        370,
        387
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1360": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        370,
        387
      ],
      "op": "POP",
      "path": "1"
    },
    "1361": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        370,
        387
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1362": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        370,
        387
      ],
      "op": "POP",
      "path": "1"
    },
    "1363": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        370,
        387
      ],
      "op": "POP",
      "path": "1"
    },
    "1364": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        370,
        387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x536"
    },
    "1367": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        370,
        387
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1368": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        359,
        387
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1369": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        409,
        413
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x1"
    },
    "1371": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        409,
        413
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1372": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        415,
        416
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1373": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        415,
        416
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1374": {
      "op": "POP"
    },
    "1375": {
      "fn": "SafeMath.tryAdd",
      "offset": [
        218,
        434
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1376": {
      "op": "POP"
    },
    "1377": {
      "op": "POP"
    },
    "1378": {
      "op": "POP"
    },
    "1379": {
      "fn": "SafeMath.tryAdd",
      "jump": "o",
      "offset": [
        218,
        434
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1380": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2445,
        2947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1381": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2596,
        2604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1383": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2596,
        2611
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1384": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2504,
        2508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1386": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2504,
        2508
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2504,
        2508
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1388": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2652,
        2854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1389": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2676,
        2677
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1390": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2672,
        2673
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1391": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2672,
        2677
      ],
      "op": "LT",
      "path": "0"
    },
    "1392": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2652,
        2854
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1393": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2652,
        2854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C8"
    },
    "1396": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2652,
        2854
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1397": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2774,
        2782
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1404": {
      "op": "SHL"
    },
    "1405": {
      "op": "SUB"
    },
    "1406": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2782
      ],
      "op": "AND",
      "path": "0"
    },
    "1407": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1409": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2768,
        2769
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1410": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1411": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1412": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1413": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "LT",
      "path": "0"
    },
    "1414": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x591"
    },
    "1417": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1418": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x591"
    },
    "1421": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x618"
    },
    "1424": {
      "fn": "Faucet.hasDonated",
      "jump": "i",
      "offset": [
        2759,
        2770
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1425": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1426": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1428": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1429": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1430": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1431": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1433": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1434": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1435": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1436": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "ADD",
      "path": "0"
    },
    "1437": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1444": {
      "op": "SHL"
    },
    "1445": {
      "op": "SUB"
    },
    "1446": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2770
      ],
      "op": "AND",
      "path": "0"
    },
    "1447": {
      "branch": 28,
      "fn": "Faucet.hasDonated",
      "offset": [
        2759,
        2782
      ],
      "op": "EQ",
      "path": "0"
    },
    "1448": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2755,
        2843
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1449": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2755,
        2843
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "1452": {
      "branch": 28,
      "fn": "Faucet.hasDonated",
      "offset": [
        2755,
        2843
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2839,
        2843
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "1456": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2839,
        2843
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1457": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2445,
        2947
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1458": {
      "op": "POP"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "op": "POP"
    },
    "1461": {
      "fn": "Faucet.hasDonated",
      "jump": "o",
      "offset": [
        2445,
        2947
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1462": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2755,
        2843
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1463": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "1464": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C0"
    },
    "1467": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1468": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62E"
    },
    "1471": {
      "fn": "Faucet.hasDonated",
      "jump": "i",
      "offset": [
        2679,
        2682
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1472": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1473": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1474": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "POP",
      "path": "0"
    },
    "1475": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2679,
        2682
      ],
      "op": "POP",
      "path": "0"
    },
    "1476": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2652,
        2854
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56C"
    },
    "1479": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2652,
        2854
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1480": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2652,
        2854
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2935,
        2940
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "1484": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2935,
        2940
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1485": {
      "fn": "Faucet.hasDonated",
      "offset": [
        2445,
        2947
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1486": {
      "op": "POP"
    },
    "1487": {
      "op": "POP"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "fn": "Faucet.hasDonated",
      "jump": "o",
      "offset": [
        2445,
        2947
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1490": {
      "op": "JUMPDEST"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1495": {
      "op": "DUP3"
    },
    "1496": {
      "op": "DUP5"
    },
    "1497": {
      "op": "SUB"
    },
    "1498": {
      "op": "SLT"
    },
    "1499": {
      "op": "ISZERO"
    },
    "1500": {
      "op": "PUSH2",
      "value": "0x5E4"
    },
    "1503": {
      "op": "JUMPI"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1506": {
      "op": "DUP1"
    },
    "1507": {
      "op": "REVERT"
    },
    "1508": {
      "op": "JUMPDEST"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "CALLDATALOAD"
    },
    "1511": {
      "op": "SWAP2"
    },
    "1512": {
      "op": "SWAP1"
    },
    "1513": {
      "op": "POP"
    },
    "1514": {
      "jump": "o",
      "op": "JUMP"
    },
    "1515": {
      "op": "JUMPDEST"
    },
    "1516": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1523": {
      "op": "SHL"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1526": {
      "op": "MSTORE"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1536": {
      "op": "REVERT"
    },
    "1537": {
      "op": "JUMPDEST"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "DUP3"
    },
    "1541": {
      "op": "DUP3"
    },
    "1542": {
      "op": "LT"
    },
    "1543": {
      "op": "ISZERO"
    },
    "1544": {
      "op": "PUSH2",
      "value": "0x613"
    },
    "1547": {
      "op": "JUMPI"
    },
    "1548": {
      "op": "PUSH2",
      "value": "0x613"
    },
    "1551": {
      "op": "PUSH2",
      "value": "0x5EB"
    },
    "1554": {
      "jump": "i",
      "op": "JUMP"
    },
    "1555": {
      "op": "JUMPDEST"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "op": "SUB"
    },
    "1558": {
      "op": "SWAP1"
    },
    "1559": {
      "jump": "o",
      "op": "JUMP"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1568": {
      "op": "SHL"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1576": {
      "op": "MSTORE"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1581": {
      "op": "REVERT"
    },
    "1582": {
      "op": "JUMPDEST"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1587": {
      "op": "NOT"
    },
    "1588": {
      "op": "DUP3"
    },
    "1589": {
      "op": "EQ"
    },
    "1590": {
      "op": "ISZERO"
    },
    "1591": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "1594": {
      "op": "JUMPI"
    },
    "1595": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "1598": {
      "op": "PUSH2",
      "value": "0x5EB"
    },
    "1601": {
      "jump": "i",
      "op": "JUMP"
    },
    "1602": {
      "op": "JUMPDEST"
    },
    "1603": {
      "op": "POP"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "ADD"
    },
    "1607": {
      "op": "SWAP1"
    },
    "1608": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5a44179a3c0f4e9af9a302cb6e13adf97afaf681",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >0.6.0;\nimport \"./Libraries/SafeMath.sol\";\n\n\n\n/*\n * @title: Rinkeby Test Faucet [Modified].\n * @author: Anthony (fps) https://github.com/fps8k .\n * @dev: \n *\n * I once wrote this contract to deposit any specific amount of ether from the contract.\n * But on this mod [28/05/2022] I am re-writing it to actually dispose some specific ether 0.2 ether.\n * But it shall demand just 1 ether for fundings.\n*/\n\ncontract Faucet\n{\n    // Use SafeMath for all uint.\n    using SafeMath for uint256;\n    // Faucet has no owner.\n    // Collections, that is the total amount that a particular address has collected from the Faucet.\n    mapping (address => uint256) private collections;\n    // Funders, the total amount that a particular address has donated to the Faucet.\n    mapping (address => uint256) private funders;\n    // Time, the last time a particular address withdrew. Addresses can withdraw ether every 12 hours.\n    mapping (address => uint256) private time;\n    // Array of the addresses that have donated to the faucet.\n    address[] public donators;\n    // Balance of the contract.\n    uint256 private balance;\n    // Interval that is 12 hours.\n    uint256 private interval = 12 hours;\n    // uint256 private interval = 1 seconds;\n    // Boolean to check for Re-Entrancy attacks.\n    bool locked;\n\n\n\n    // ============= E V E N T S =================\n\n    // Emitted when someone funds the contract.\n    event Fund(address indexed __funder, uint256 indexed __fund);\n    // Emitted when the contract pays someone.\n    event Pay(address indexed __receiver, uint256 indexed __fund);\n\n    // ============= E V E N T S =================\n\n\n\n    // ================ F A L L B A C K   A N D   R E C E I V E ================\n\n    fallback() external payable{}\n    receive() external payable{}\n\n    // ================ F A L L B A C K   A N D   R E C E I V E ================\n\n\n\n    // ================= M O D I F I E R ==========================\n\n    // Checks for Re-Entrancy attacks.\n    modifier noReEntrance()\n    {\n        // Requires that the locked is set to false.\n        require(!locked, \"No ReEntrance\");\n        // Lock the function.\n        locked = true;\n        // Execute.\n        _;\n        // Re-open the lock.\n        locked = false;\n    }\n\n    // ================= M O D I F I E R ==========================\n\n\n\n    // Checks if the address is in the donators array for a new push.\n    function hasDonated(address _address) private view returns(bool)\n    {\n        // Push the length of the donators array to memory.\n        uint256 l = donators.length;\n        // Loop over the array\n        for (uint256 k = 0; k < l; k++)\n        {\n            // If the donor exists in the array.\n            if (donators[k] == _address)\n                // Return true.\n                return true;\n        }\n\n        // On loop end, that is, the donor is not in the array.\n        return false;\n    }\n\n\n\n    /*\n    * @dev:\n    *\n    * Funds any address on the condition that the time span of the last transaction to that address was 12 hours.\n    */\n    function fund() public payable noReEntrance\n    {\n        // Ensure address donating isn't a 0 address.\n        require(msg.sender != address(0), \"!Address\");\n        // Require that the donation is >= 1 ether.\n        require(msg.value >= 1 ether, \"Amount needed: 1 ether\");\n        // Balance left after donation.\n        uint bal = msg.value - 1 ether;\n        // This should be == 1 ether but for confirmation purposes.\n        uint _fund = msg.value - bal;\n        // Record the funders value;\n        // (, uint256 j) = funders[msg.sender].tryAdd(1 ether);\n        (, uint256 j) = funders[msg.sender].tryAdd(_fund);\n        // Update the funder value.\n        funders[msg.sender] = j;\n        // Increment the balance of the contract.\n        // (, uint256 p) = balance.tryAdd(1 ether);\n        (, uint256 p) = balance.tryAdd(_fund);\n        // Update new balance.\n        balance = p;\n\n        // If the address has not donated before, it should be added to the donators array.\n        if (!hasDonated(msg.sender))\n            // Add the address to the array.\n            donators.push(msg.sender);\n\n        // Emit the fund event.\n        emit Fund(msg.sender, _fund);\n\n        // If the balance is > 0.\n        if (bal > 0)\n            // Refund the balance`.\n            payable(msg.sender).transfer(bal);\n            // Emit the pay event.\n            emit Pay(msg.sender, bal);\n    }\n\n\n\n    /*\n    * @dev:\n    *\n    * This function requests for some ether from the faucet.\n    * The faucet dispenses 0.2 ether for every address every 12 hours.\n    */\n    function request() public payable noReEntrance\n    {\n        // Ensure address donating isn't a 0 address.\n        require(msg.sender != address(0), \"!Address\");\n        // Make sure that the contract still has ether.\n        require(balance > 0, \"We have run out of ether\");\n        // Get the requester's last request time.\n        uint256 last_time = time[msg.sender];\n        // Make sure that the time passed is more than or == 12 hours.\n        require((block.timestamp - last_time) > interval, \"You can only withdraw every 12 hours!\");\n        // Remove 0.2 ether from balance.\n        (, uint256 p) = balance.trySub(0.2 ether);\n        // Reassign new balance.\n        balance = p;\n        // Update the collections of the requester.\n        (, uint j) = collections[msg.sender].trySub(0.2 ether);\n        // Update the requesters collections.\n        collections[msg.sender] = j;\n        // Update the last request time.\n        time[msg.sender] = block.timestamp;\n        // Transfer the funds to the requester.\n        payable(msg.sender).transfer(0.2 ether);\n        // Emit the pay event.\n        emit Pay(msg.sender, 0.2 ether);\n    }\n}",
  "sourceMap": "451:5367:0:-:0;;;1225:8;1198:35;;451:5367;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Faucet.sol",
  "type": "contract"
}