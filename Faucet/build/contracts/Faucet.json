{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_val",
          "type": "uint256"
        }
      ],
      "name": "request",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Faucet.sol"
  },
  "ast": {
    "absolutePath": "contracts/Faucet.sol",
    "exportedSymbols": {
      "Faucet": [
        147
      ]
    },
    "id": 148,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 147,
        "linearizedBaseContracts": [
          147
        ],
        "name": "Faucet",
        "nameLocation": "168:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "243:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "227:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "227:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "collections",
            "nameLocation": "292:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "255:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "264:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "255:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "275:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "031b3677",
            "id": 11,
            "mutability": "mutable",
            "name": "funders",
            "nameLocation": "345:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "309:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "318:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "309:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 9,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "329:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "closed",
            "nameLocation": "364:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "359:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "359:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "381:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "376:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 14,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "376:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "434:67:0",
              "statements": [
                {
                  "expression": {
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "444:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307835653037384536623534356346383861424435424235386432373438386546384245304432353933",
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "452:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x5e078E6b545cF88aBD5BB58d27488eF8BE0D2593"
                    },
                    "src": "444:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "444:50:0"
                }
              ]
            },
            "id": 23,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "434:0:0"
            },
            "scope": 147,
            "src": "416:85:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "537:2:0",
              "statements": []
            },
            "id": 27,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:2:0"
            },
            "returnParameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:0"
            },
            "scope": 147,
            "src": "510:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "570:2:0",
              "statements": []
            },
            "id": 31,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "570:0:0"
            },
            "scope": 147,
            "src": "544:28:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "606:108:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "624:7:0",
                        "subExpression": {
                          "id": 34,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "625:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f205265456e7472616e6365",
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "633:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3538784b52be8f41ef5fc3b6beb4a805a1e66a4d536c17df4e81404f9efba3a8",
                          "typeString": "literal_string \"No ReEntrance\""
                        },
                        "value": "No ReEntrance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3538784b52be8f41ef5fc3b6beb4a805a1e66a4d536c17df4e81404f9efba3a8",
                          "typeString": "literal_string \"No ReEntrance\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "616:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "616:33:0"
                },
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "659:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "668:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "659:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "659:13:0"
                },
                {
                  "id": 43,
                  "nodeType": "PlaceholderStatement",
                  "src": "682:1:0"
                },
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "693:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "702:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "693:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "693:14:0"
                }
              ]
            },
            "id": 49,
            "name": "noReEntrance",
            "nameLocation": "587:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:2:0"
            },
            "src": "578:136:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "771:230:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "789:7:0",
                        "subExpression": {
                          "id": 55,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "790:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e64696e6720636c6f7365642c20436865636b206261636b206c617465722e",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "798:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaf94a68cdff88eb26764dab3e030c14c6deb0eeaa05510f29298f73a7ef16ec",
                          "typeString": "literal_string \"Funding closed, Check back later.\""
                        },
                        "value": "Funding closed, Check back later."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaf94a68cdff88eb26764dab3e030c14c6deb0eeaa05510f29298f73a7ef16ec",
                          "typeString": "literal_string \"Funding closed, Check back later.\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "781:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "781:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "852:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "852:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030303030303030",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "865:14:0",
                          "subdenomination": "gwei",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000"
                        },
                        "src": "852:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e203d3d20302e31455448",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_474309d98f7d36a3ec01e08ae66e4ce966ce399b78bb015c9ddfd432866c4d15",
                          "typeString": "literal_string \"Min == 0.1ETH\""
                        },
                        "value": "Min == 0.1ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_474309d98f7d36a3ec01e08ae66e4ce966ce399b78bb015c9ddfd432866c4d15",
                          "typeString": "literal_string \"Min == 0.1ETH\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "844:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "844:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 69,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "915:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "915:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "928:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          "value": "2"
                        },
                        "src": "915:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178203d3d2032455448",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "937:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_670922994879f4da6c00bb6a5ad21a9667d2a0f40e247677fc410fe38d9a7c56",
                          "typeString": "literal_string \"Max == 2ETH\""
                        },
                        "value": "Max == 2ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_670922994879f4da6c00bb6a5ad21a9667d2a0f40e247677fc410fe38d9a7c56",
                          "typeString": "literal_string \"Max == 2ETH\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "907:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "907:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "907:44:0"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 76,
                        "name": "funders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "962:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "expression": {
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "970:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "970:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "962:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "985:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "985:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "962:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "962:32:0"
                }
              ]
            },
            "functionSelector": "b60d4288",
            "id": 85,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 52,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51,
                  "name": "noReEntrance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49,
                  "src": "754:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "754:12:0"
              }
            ],
            "name": "fund",
            "nameLocation": "732:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:2:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:0"
            },
            "scope": 147,
            "src": "723:278:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1070:252:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1088:7:0",
                        "subExpression": {
                          "id": 93,
                          "name": "closed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1089:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e64696e6720636c6f7365642c20436865636b206261636b206c617465722e",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1097:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaf94a68cdff88eb26764dab3e030c14c6deb0eeaa05510f29298f73a7ef16ec",
                          "typeString": "literal_string \"Funding closed, Check back later.\""
                        },
                        "value": "Funding closed, Check back later."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaf94a68cdff88eb26764dab3e030c14c6deb0eeaa05510f29298f73a7ef16ec",
                          "typeString": "literal_string \"Funding closed, Check back later.\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1080:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99,
                          "name": "_val",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1151:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1158:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1151:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526571203d2030",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1161:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_313bcff86ce215c61dc7f5030f72792c56170a952897ea6512ef01779ef9be93",
                          "typeString": "literal_string \"Req = 0\""
                        },
                        "value": "Req = 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_313bcff86ce215c61dc7f5030f72792c56170a952897ea6512ef01779ef9be93",
                          "typeString": "literal_string \"Req = 0\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1143:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 106,
                          "name": "_val",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1189:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030303030303030",
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1197:14:0",
                          "subdenomination": "gwei",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "100000000"
                        },
                        "src": "1189:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526571203c3d20302e31455448",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1213:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afaa8188f068e9d20ecfe886119bde7da66e4b8995d595ab1b1645afd2d87d28",
                          "typeString": "literal_string \"Req <= 0.1ETH\""
                        },
                        "value": "Req <= 0.1ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afaa8188f068e9d20ecfe886119bde7da66e4b8995d595ab1b1645afd2d87d28",
                          "typeString": "literal_string \"Req <= 0.1ETH\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1181:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:48:0"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 112,
                        "name": "collections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1240:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 115,
                      "indexExpression": {
                        "expression": {
                          "id": 113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1252:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1252:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1240:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_val",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "1267:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1240:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "_val",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "1310:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 121,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1289:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1289:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1281:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 119,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1281:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1281:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1281:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1281:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:34:0"
                }
              ]
            },
            "functionSelector": "d845a4b3",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 90,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89,
                  "name": "noReEntrance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49,
                  "src": "1053:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1053:12:0"
              }
            ],
            "name": "request",
            "nameLocation": "1019:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_val",
                  "nameLocation": "1032:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1027:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1026:11:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1070:0:0"
            },
            "scope": 147,
            "src": "1010:312:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1360:81:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 133,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1378:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1378:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 135,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1392:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1378:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "214f776e6572",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1399:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0794ad23c98919f7852dbe5fdc41e170afbe3a97a1c48ea66a80e1ebd7c3e066",
                          "typeString": "literal_string \"!Owner\""
                        },
                        "value": "!Owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0794ad23c98919f7852dbe5fdc41e170afbe3a97a1c48ea66a80e1ebd7c3e066",
                          "typeString": "literal_string \"!Owner\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1370:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:38:0"
                },
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "closed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1418:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1427:7:0",
                      "subExpression": {
                        "id": 141,
                        "name": "closed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1428:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1418:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:16:0"
                }
              ]
            },
            "functionSelector": "40a3d246",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toggle",
            "nameLocation": "1340:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:0:0"
            },
            "scope": 147,
            "src": "1331:110:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 148,
        "src": "159:1284:0",
        "usedErrors": []
      }
    ],
    "src": "32:1411:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916735e078e6b545cf88abd5bb58d27488ef8be0d259317905561048d806100466000396000f3fe6080604052600436106100405760003560e01c8063031b36771461004957806340a3d24614610088578063b60d42881461009d578063d845a4b3146100a557005b3661004757005b005b34801561005557600080fd5b506100766100643660046103a7565b60026020526000908152604090205481565b60405190815260200160405180910390f35b34801561009457600080fd5b506100476100b8565b610047610114565b6100476100b33660046103d7565b61024c565b6000546001600160a01b031633146101005760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b60448201526064015b60405180910390fd5b6003805460ff19811660ff90911615179055565b600354610100900460ff161561015c5760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064016100f7565b6003805461ff001981166101001790915560ff161561018d5760405162461bcd60e51b81526004016100f7906103f0565b67016345785d8a00003410156101d55760405162461bcd60e51b815260206004820152600d60248201526c09ad2dc407a7a40605c628aa89609b1b60448201526064016100f7565b671bc16d674ec8000034111561021b5760405162461bcd60e51b815260206004820152600b60248201526a09ac2f0407a7a40648aa8960ab1b60448201526064016100f7565b336000908152600260205260408120805434929061023a908490610431565b90915550506003805461ff0019169055565b600354610100900460ff16156102945760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064016100f7565b6003805461ff001981166101001790915560ff16156102c55760405162461bcd60e51b81526004016100f7906103f0565b600081116102ff5760405162461bcd60e51b81526020600482015260076024820152660526571203d20360cc1b60448201526064016100f7565b67016345785d8a00008111156103475760405162461bcd60e51b815260206004820152600d60248201526c0a4cae240787a40605c628aa89609b1b60448201526064016100f7565b3360009081526001602052604081208054839290610366908490610431565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610398573d6000803e3d6000fd5b50506003805461ff0019169055565b6000602082840312156103b957600080fd5b81356001600160a01b03811681146103d057600080fd5b9392505050565b6000602082840312156103e957600080fd5b5035919050565b60208082526021908201527f46756e64696e6720636c6f7365642c20436865636b206261636b206c617465726040820152601760f91b606082015260800190565b6000821982111561045257634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122027dc74a6896c9e3ef2e0f80699056f189391bc97ea87c40eca1a6f5d584f79ff64736f6c634300080c0033",
  "bytecodeSha1": "4efd55e98bad33629b242383314a383d350ee5cf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Faucet",
  "coverageMap": {
    "branches": {
      "0": {
        "Faucet.fund": {
          "12": [
            789,
            796,
            true
          ],
          "13": [
            852,
            879,
            true
          ],
          "14": [
            915,
            935,
            true
          ]
        },
        "Faucet.request": {
          "15": [
            1088,
            1095,
            true
          ],
          "16": [
            1151,
            1159,
            true
          ],
          "17": [
            1189,
            1211,
            true
          ]
        },
        "Faucet.toggle": {
          "11": [
            1378,
            1397,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Faucet.fund": {
          "2": [
            781,
            834
          ],
          "3": [
            844,
            897
          ],
          "4": [
            907,
            951
          ],
          "5": [
            962,
            994
          ]
        },
        "Faucet.request": {
          "6": [
            1080,
            1133
          ],
          "7": [
            1143,
            1171
          ],
          "8": [
            1181,
            1229
          ],
          "9": [
            1240,
            1271
          ],
          "10": [
            1281,
            1315
          ]
        },
        "Faucet.toggle": {
          "0": [
            1370,
            1408
          ],
          "1": [
            1418,
            1434
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100405760003560e01c8063031b36771461004957806340a3d24614610088578063b60d42881461009d578063d845a4b3146100a557005b3661004757005b005b34801561005557600080fd5b506100766100643660046103a7565b60026020526000908152604090205481565b60405190815260200160405180910390f35b34801561009457600080fd5b506100476100b8565b610047610114565b6100476100b33660046103d7565b61024c565b6000546001600160a01b031633146101005760405162461bcd60e51b815260206004820152600660248201526510a7bbb732b960d11b60448201526064015b60405180910390fd5b6003805460ff19811660ff90911615179055565b600354610100900460ff161561015c5760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064016100f7565b6003805461ff001981166101001790915560ff161561018d5760405162461bcd60e51b81526004016100f7906103f0565b67016345785d8a00003410156101d55760405162461bcd60e51b815260206004820152600d60248201526c09ad2dc407a7a40605c628aa89609b1b60448201526064016100f7565b671bc16d674ec8000034111561021b5760405162461bcd60e51b815260206004820152600b60248201526a09ac2f0407a7a40648aa8960ab1b60448201526064016100f7565b336000908152600260205260408120805434929061023a908490610431565b90915550506003805461ff0019169055565b600354610100900460ff16156102945760405162461bcd60e51b815260206004820152600d60248201526c4e6f205265456e7472616e636560981b60448201526064016100f7565b6003805461ff001981166101001790915560ff16156102c55760405162461bcd60e51b81526004016100f7906103f0565b600081116102ff5760405162461bcd60e51b81526020600482015260076024820152660526571203d20360cc1b60448201526064016100f7565b67016345785d8a00008111156103475760405162461bcd60e51b815260206004820152600d60248201526c0a4cae240787a40605c628aa89609b1b60448201526064016100f7565b3360009081526001602052604081208054839290610366908490610431565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610398573d6000803e3d6000fd5b50506003805461ff0019169055565b6000602082840312156103b957600080fd5b81356001600160a01b03811681146103d057600080fd5b9392505050565b6000602082840312156103e957600080fd5b5035919050565b60208082526021908201527f46756e64696e6720636c6f7365642c20436865636b206261636b206c617465726040820152601760f91b606082015260800190565b6000821982111561045257634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122027dc74a6896c9e3ef2e0f80699056f189391bc97ea87c40eca1a6f5d584f79ff64736f6c634300080c0033",
  "deployedSourceMap": "159:1284:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:43;;;;;;;;;;-1:-1:-1;309:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:1;;;439:2;424:18;309:43:0;;;;;;;1331:110;;;;;;;;;;;;;:::i;723:278::-;;;:::i;1010:312::-;;;;;;:::i;:::-;;:::i;1331:110::-;1392:5;;-1:-1:-1;;;;;1392:5:0;1378:10;:19;1370:38;;;;-1:-1:-1;;;1370:38:0;;874:2:1;1370:38:0;;;856:21:1;913:1;893:18;;;886:29;-1:-1:-1;;;931:18:1;;;924:36;977:18;;1370:38:0;;;;;;;;;1428:6;;;-1:-1:-1;;1418:16:0;;1428:6;;;;1427:7;1418:16;;;1331:110::o;723:278::-;625:6;;;;;;;624:7;616:33;;;;-1:-1:-1;;;616:33:0;;1208:2:1;616:33:0;;;1190:21:1;1247:2;1227:18;;;1220:30;-1:-1:-1;;;1266:18:1;;;1259:43;1319:18;;616:33:0;1006:337:1;616:33:0;659:6;:13;;-1:-1:-1;;659:13:0;;;;;;;;790:6;789:7:::1;781:53;;;;-1:-1:-1::0;;;781:53:0::1;;;;;;;:::i;:::-;865:14;852:9;:27;;844:53;;;::::0;-1:-1:-1;;;844:53:0;;1952:2:1;844:53:0::1;::::0;::::1;1934:21:1::0;1991:2;1971:18;;;1964:30;-1:-1:-1;;;2010:18:1;;;2003:43;2063:18;;844:53:0::1;1750:337:1::0;844:53:0::1;928:7;915:9;:20;;907:44;;;::::0;-1:-1:-1;;;907:44:0;;2294:2:1;907:44:0::1;::::0;::::1;2276:21:1::0;2333:2;2313:18;;;2306:30;-1:-1:-1;;;2352:18:1;;;2345:41;2403:18;;907:44:0::1;2092:335:1::0;907:44:0::1;970:10;962:19;::::0;;;:7:::1;:19;::::0;;;;:32;;985:9:::1;::::0;962:19;:32:::1;::::0;985:9;;962:32:::1;:::i;:::-;::::0;;;-1:-1:-1;;693:6:0;:14;;-1:-1:-1;;693:14:0;;;723:278::o;1010:312::-;625:6;;;;;;;624:7;616:33;;;;-1:-1:-1;;;616:33:0;;1208:2:1;616:33:0;;;1190:21:1;1247:2;1227:18;;;1220:30;-1:-1:-1;;;1266:18:1;;;1259:43;1319:18;;616:33:0;1006:337:1;616:33:0;659:6;:13;;-1:-1:-1;;659:13:0;;;;;;;;1089:6;1088:7:::1;1080:53;;;;-1:-1:-1::0;;;1080:53:0::1;;;;;;;:::i;:::-;1158:1;1151:4;:8;1143:28;;;::::0;-1:-1:-1;;;1143:28:0;;2864:2:1;1143:28:0::1;::::0;::::1;2846:21:1::0;2903:1;2883:18;;;2876:29;-1:-1:-1;;;2921:18:1;;;2914:37;2968:18;;1143:28:0::1;2662:330:1::0;1143:28:0::1;1197:14;1189:4;:22;;1181:48;;;::::0;-1:-1:-1;;;1181:48:0;;3199:2:1;1181:48:0::1;::::0;::::1;3181:21:1::0;3238:2;3218:18;;;3211:30;-1:-1:-1;;;3257:18:1;;;3250:43;3310:18;;1181:48:0::1;2997:337:1::0;1181:48:0::1;1252:10;1240:23;::::0;;;:11:::1;:23;::::0;;;;:31;;1267:4;;1240:23;:31:::1;::::0;1267:4;;1240:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;1281:34:0::1;::::0;1289:10:::1;::::0;1281:34;::::1;;;::::0;1310:4;;1281:34:::1;::::0;;;1310:4;1289:10;1281:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;693:6:0;:14;;-1:-1:-1;;693:14:0;;;1010:312::o;14:286:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:1;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:1:o;487:180::-;546:6;599:2;587:9;578:7;574:23;570:32;567:52;;;615:1;612;605:12;567:52;-1:-1:-1;638:23:1;;487:180;-1:-1:-1;487:180:1:o;1348:397::-;1550:2;1532:21;;;1589:2;1569:18;;;1562:30;1628:34;1623:2;1608:18;;1601:62;-1:-1:-1;;;1694:2:1;1679:18;;1672:31;1735:3;1720:19;;1348:397::o;2432:225::-;2472:3;2503:1;2499:6;2496:1;2493:13;2490:136;;;2548:10;2543:3;2539:20;2536:1;2529:31;2583:4;2580:1;2573:15;2611:4;2608:1;2601:15;2490:136;-1:-1:-1;2642:9:1;;2432:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    159,
    1443
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31B3677 EQ PUSH2 0x49 JUMPI DUP1 PUSH4 0x40A3D246 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xD845A4B3 EQ PUSH2 0xA5 JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x47 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH2 0x64 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47 PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x47 PUSH2 0x114 JUMP JUMPDEST PUSH2 0x47 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D7 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x10A7BBB732B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F205265456E7472616E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0xFF00 NOT DUP2 AND PUSH2 0x100 OR SWAP1 SWAP2 SSTORE PUSH1 0xFF AND ISZERO PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST PUSH8 0x16345785D8A0000 CALLVALUE LT ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x9AD2DC407A7A40605C628AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF7 JUMP JUMPDEST PUSH8 0x1BC16D674EC80000 CALLVALUE GT ISZERO PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x9AC2F0407A7A40648AA89 PUSH1 0xAB SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x23A SWAP1 DUP5 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x294 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F205265456E7472616E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0xFF00 NOT DUP2 AND PUSH2 0x100 OR SWAP1 SWAP2 SSTORE PUSH1 0xFF AND ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x526571203D203 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF7 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 GT ISZERO PUSH2 0x347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA4CAE240787A40605C628AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x366 SWAP1 DUP5 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x398 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E64696E6720636C6F7365642C20436865636B206261636B206C61746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x452 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xDC PUSH21 0xA6896C9E3EF2E0F80699056F189391BC97EA87C40E 0xCA BYTE PUSH16 0x5D584F79FF64736F6C634300080C0033 ",
  "pcMap": {
    "0": {
      "offset": [
        159,
        1443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40"
    },
    "12": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x31B3677"
    },
    "25": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49"
    },
    "29": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x40A3D246"
    },
    "36": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "40": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB60D4288"
    },
    "47": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D"
    },
    "51": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD845A4B3"
    },
    "58": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5"
    },
    "62": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "STOP",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47"
    },
    "69": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "STOP",
      "path": "0"
    },
    "71": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        159,
        1443
      ],
      "op": "STOP",
      "path": "0"
    },
    "73": {
      "offset": [
        309,
        352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55"
    },
    "80": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "83": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "84": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "REVERT",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "86": {
      "op": "POP"
    },
    "87": {
      "offset": [
        309,
        352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76"
    },
    "90": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "93": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "96": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A7"
    },
    "99": {
      "fn": null,
      "jump": "i",
      "offset": [
        309,
        352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "103": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "105": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "106": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "108": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "111": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "113": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "DUP2",
      "path": "0"
    },
    "117": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "121": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "122": {
      "op": "SWAP1"
    },
    "123": {
      "op": "DUP2"
    },
    "124": {
      "op": "MSTORE"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "127": {
      "op": "ADD"
    },
    "128": {
      "offset": [
        309,
        352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "130": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "131": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "DUP1",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "133": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "SUB",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        309,
        352
      ],
      "op": "RETURN",
      "path": "0"
    },
    "136": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "138": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "140": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94"
    },
    "143": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "144": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "146": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "DUP1",
      "path": "0"
    },
    "147": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "REVERT",
      "path": "0"
    },
    "148": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "149": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "POP",
      "path": "0"
    },
    "150": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47"
    },
    "153": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "156": {
      "fn": "Faucet.toggle",
      "jump": "i",
      "offset": [
        1331,
        1441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "157": {
      "fn": "Faucet.fund",
      "offset": [
        723,
        1001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "158": {
      "fn": "Faucet.fund",
      "offset": [
        723,
        1001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47"
    },
    "161": {
      "fn": "Faucet.fund",
      "offset": [
        723,
        1001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x114"
    },
    "164": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        723,
        1001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "165": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "166": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47"
    },
    "169": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3"
    },
    "172": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "173": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "175": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D7"
    },
    "178": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        1010,
        1322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "179": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "180": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24C"
    },
    "183": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        1010,
        1322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "184": {
      "fn": "Faucet.toggle",
      "offset": [
        1331,
        1441
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "Faucet.toggle",
      "offset": [
        1392,
        1397
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "187": {
      "fn": "Faucet.toggle",
      "offset": [
        1392,
        1397
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "194": {
      "op": "SHL"
    },
    "195": {
      "op": "SUB"
    },
    "196": {
      "fn": "Faucet.toggle",
      "offset": [
        1392,
        1397
      ],
      "op": "AND",
      "path": "0"
    },
    "197": {
      "fn": "Faucet.toggle",
      "offset": [
        1378,
        1388
      ],
      "op": "CALLER",
      "path": "0"
    },
    "198": {
      "branch": 11,
      "fn": "Faucet.toggle",
      "offset": [
        1378,
        1397
      ],
      "op": "EQ",
      "path": "0"
    },
    "199": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "202": {
      "branch": 11,
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "203": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "205": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "212": {
      "op": "SHL"
    },
    "213": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "DUP2",
      "path": "0"
    },
    "214": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "217": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "219": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "DUP3",
      "path": "0"
    },
    "220": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "ADD",
      "path": "0"
    },
    "221": {
      "op": "MSTORE"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "226": {
      "op": "DUP3"
    },
    "227": {
      "op": "ADD"
    },
    "228": {
      "op": "MSTORE"
    },
    "229": {
      "op": "PUSH6",
      "value": "0x10A7BBB732B9"
    },
    "236": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "238": {
      "op": "SHL"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "241": {
      "op": "DUP3"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "op": "MSTORE"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "246": {
      "op": "ADD"
    },
    "247": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "250": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "251": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "253": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "SUB",
      "path": "0"
    },
    "254": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "255": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "256": {
      "fn": "Faucet.toggle",
      "offset": [
        1370,
        1408
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "257": {
      "fn": "Faucet.toggle",
      "offset": [
        1428,
        1434
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x3"
    },
    "259": {
      "fn": "Faucet.toggle",
      "offset": [
        1428,
        1434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "260": {
      "fn": "Faucet.toggle",
      "offset": [
        1428,
        1434
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "261": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "263": {
      "op": "NOT"
    },
    "264": {
      "fn": "Faucet.toggle",
      "offset": [
        1418,
        1434
      ],
      "op": "DUP2",
      "path": "0"
    },
    "265": {
      "fn": "Faucet.toggle",
      "offset": [
        1418,
        1434
      ],
      "op": "AND",
      "path": "0"
    },
    "266": {
      "fn": "Faucet.toggle",
      "offset": [
        1428,
        1434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "268": {
      "fn": "Faucet.toggle",
      "offset": [
        1428,
        1434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "269": {
      "fn": "Faucet.toggle",
      "offset": [
        1428,
        1434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "270": {
      "fn": "Faucet.toggle",
      "offset": [
        1428,
        1434
      ],
      "op": "AND",
      "path": "0"
    },
    "271": {
      "fn": "Faucet.toggle",
      "offset": [
        1427,
        1434
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "272": {
      "fn": "Faucet.toggle",
      "offset": [
        1418,
        1434
      ],
      "op": "OR",
      "path": "0"
    },
    "273": {
      "fn": "Faucet.toggle",
      "offset": [
        1418,
        1434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "Faucet.toggle",
      "offset": [
        1418,
        1434
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "275": {
      "fn": "Faucet.toggle",
      "jump": "o",
      "offset": [
        1331,
        1441
      ],
      "op": "JUMP",
      "path": "0"
    },
    "276": {
      "fn": "Faucet.fund",
      "offset": [
        723,
        1001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "277": {
      "offset": [
        625,
        631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "279": {
      "fn": "Faucet.fund",
      "offset": [
        625,
        631
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "280": {
      "fn": "Faucet.fund",
      "offset": [
        625,
        631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "283": {
      "fn": "Faucet.fund",
      "offset": [
        625,
        631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "284": {
      "fn": "Faucet.fund",
      "offset": [
        625,
        631
      ],
      "op": "DIV",
      "path": "0"
    },
    "285": {
      "fn": "Faucet.fund",
      "offset": [
        625,
        631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "287": {
      "fn": "Faucet.fund",
      "offset": [
        625,
        631
      ],
      "op": "AND",
      "path": "0"
    },
    "288": {
      "offset": [
        624,
        631
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "289": {
      "offset": [
        616,
        649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "292": {
      "offset": [
        616,
        649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "293": {
      "fn": "Faucet.fund",
      "offset": [
        616,
        649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "295": {
      "fn": "Faucet.fund",
      "offset": [
        616,
        649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "offset": [
        616,
        649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "304": {
      "fn": "Faucet.fund",
      "offset": [
        616,
        649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "307": {
      "offset": [
        616,
        649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "309": {
      "fn": "Faucet.fund",
      "offset": [
        616,
        649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "310": {
      "fn": "Faucet.fund",
      "offset": [
        616,
        649
      ],
      "op": "ADD",
      "path": "0"
    },
    "311": {
      "op": "MSTORE"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "316": {
      "op": "DUP3"
    },
    "317": {
      "op": "ADD"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH13",
      "value": "0x4E6F205265456E7472616E6365"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "335": {
      "op": "SHL"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "338": {
      "op": "DUP3"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "op": "MSTORE"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "offset": [
        616,
        649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "347": {
      "op": "JUMP"
    },
    "348": {
      "offset": [
        616,
        649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "offset": [
        659,
        665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "351": {
      "offset": [
        659,
        672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "352": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "353": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "356": {
      "op": "NOT"
    },
    "357": {
      "offset": [
        659,
        672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "358": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "AND",
      "path": "0"
    },
    "359": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "362": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "OR",
      "path": "0"
    },
    "363": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "364": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "365": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "366": {
      "fn": "Faucet.fund",
      "offset": [
        659,
        672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "368": {
      "fn": "Faucet.fund",
      "offset": [
        790,
        796
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "369": {
      "branch": 12,
      "fn": "Faucet.fund",
      "offset": [
        789,
        796
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "370": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D"
    },
    "373": {
      "branch": 12,
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "374": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "376": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "383": {
      "op": "SHL"
    },
    "384": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "DUP2",
      "path": "0"
    },
    "385": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "386": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "388": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "ADD",
      "path": "0"
    },
    "389": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "392": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "393": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "396": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        781,
        834
      ],
      "op": "JUMP",
      "path": "0"
    },
    "397": {
      "fn": "Faucet.fund",
      "offset": [
        781,
        834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "398": {
      "fn": "Faucet.fund",
      "offset": [
        865,
        879
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 3,
      "value": "0x16345785D8A0000"
    },
    "407": {
      "fn": "Faucet.fund",
      "offset": [
        852,
        861
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "408": {
      "fn": "Faucet.fund",
      "offset": [
        852,
        879
      ],
      "op": "LT",
      "path": "0"
    },
    "409": {
      "branch": 13,
      "fn": "Faucet.fund",
      "offset": [
        852,
        879
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "410": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D5"
    },
    "413": {
      "branch": 13,
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "414": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "416": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "423": {
      "op": "SHL"
    },
    "424": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "DUP2",
      "path": "0"
    },
    "425": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "428": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "430": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "DUP3",
      "path": "0"
    },
    "431": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "ADD",
      "path": "0"
    },
    "432": {
      "op": "MSTORE"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "437": {
      "op": "DUP3"
    },
    "438": {
      "op": "ADD"
    },
    "439": {
      "op": "MSTORE"
    },
    "440": {
      "op": "PUSH13",
      "value": "0x9AD2DC407A7A40605C628AA89"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x9B"
    },
    "456": {
      "op": "SHL"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "459": {
      "op": "DUP3"
    },
    "460": {
      "op": "ADD"
    },
    "461": {
      "op": "MSTORE"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "464": {
      "op": "ADD"
    },
    "465": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "468": {
      "op": "JUMP"
    },
    "469": {
      "fn": "Faucet.fund",
      "offset": [
        844,
        897
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "470": {
      "fn": "Faucet.fund",
      "offset": [
        928,
        935
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 4,
      "value": "0x1BC16D674EC80000"
    },
    "479": {
      "fn": "Faucet.fund",
      "offset": [
        915,
        924
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "480": {
      "fn": "Faucet.fund",
      "offset": [
        915,
        935
      ],
      "op": "GT",
      "path": "0"
    },
    "481": {
      "branch": 14,
      "fn": "Faucet.fund",
      "offset": [
        915,
        935
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "482": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "485": {
      "branch": 14,
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "486": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "488": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "DUP2",
      "path": "0"
    },
    "497": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "500": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "502": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "DUP3",
      "path": "0"
    },
    "503": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "ADD",
      "path": "0"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "509": {
      "op": "DUP3"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "op": "MSTORE"
    },
    "512": {
      "op": "PUSH11",
      "value": "0x9AC2F0407A7A40648AA89"
    },
    "524": {
      "op": "PUSH1",
      "value": "0xAB"
    },
    "526": {
      "op": "SHL"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "529": {
      "op": "DUP3"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "op": "MSTORE"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "538": {
      "op": "JUMP"
    },
    "539": {
      "fn": "Faucet.fund",
      "offset": [
        907,
        951
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "Faucet.fund",
      "offset": [
        970,
        980
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "541": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "543": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "544": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "545": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "546": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "548": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "550": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "551": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "553": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "DUP2",
      "path": "0"
    },
    "554": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "555": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "DUP1",
      "path": "0"
    },
    "556": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "557": {
      "fn": "Faucet.fund",
      "offset": [
        985,
        994
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "558": {
      "fn": "Faucet.fund",
      "offset": [
        985,
        994
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "559": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "560": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "563": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "564": {
      "fn": "Faucet.fund",
      "offset": [
        985,
        994
      ],
      "op": "DUP5",
      "path": "0"
    },
    "565": {
      "fn": "Faucet.fund",
      "offset": [
        985,
        994
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "566": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "569": {
      "fn": "Faucet.fund",
      "jump": "i",
      "offset": [
        962,
        994
      ],
      "op": "JUMP",
      "path": "0"
    },
    "570": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "572": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "573": {
      "fn": "Faucet.fund",
      "offset": [
        962,
        994
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "574": {
      "op": "POP"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "offset": [
        693,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "578": {
      "offset": [
        693,
        707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "579": {
      "fn": "Faucet.fund",
      "offset": [
        693,
        707
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "580": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "583": {
      "op": "NOT"
    },
    "584": {
      "offset": [
        693,
        707
      ],
      "op": "AND",
      "path": "0"
    },
    "585": {
      "fn": "Faucet.fund",
      "offset": [
        693,
        707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "586": {
      "fn": "Faucet.fund",
      "offset": [
        693,
        707
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "587": {
      "fn": "Faucet.fund",
      "jump": "o",
      "offset": [
        723,
        1001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "588": {
      "fn": "Faucet.request",
      "offset": [
        1010,
        1322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "589": {
      "offset": [
        625,
        631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "591": {
      "fn": "Faucet.request",
      "offset": [
        625,
        631
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "592": {
      "fn": "Faucet.request",
      "offset": [
        625,
        631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "595": {
      "fn": "Faucet.request",
      "offset": [
        625,
        631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "596": {
      "fn": "Faucet.request",
      "offset": [
        625,
        631
      ],
      "op": "DIV",
      "path": "0"
    },
    "597": {
      "fn": "Faucet.request",
      "offset": [
        625,
        631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "599": {
      "fn": "Faucet.request",
      "offset": [
        625,
        631
      ],
      "op": "AND",
      "path": "0"
    },
    "600": {
      "offset": [
        624,
        631
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "601": {
      "offset": [
        616,
        649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "604": {
      "offset": [
        616,
        649
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "605": {
      "fn": "Faucet.request",
      "offset": [
        616,
        649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "607": {
      "fn": "Faucet.request",
      "offset": [
        616,
        649
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "offset": [
        616,
        649
      ],
      "op": "DUP2",
      "path": "0"
    },
    "616": {
      "fn": "Faucet.request",
      "offset": [
        616,
        649
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "619": {
      "offset": [
        616,
        649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "621": {
      "fn": "Faucet.request",
      "offset": [
        616,
        649
      ],
      "op": "DUP3",
      "path": "0"
    },
    "622": {
      "fn": "Faucet.request",
      "offset": [
        616,
        649
      ],
      "op": "ADD",
      "path": "0"
    },
    "623": {
      "op": "MSTORE"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "628": {
      "op": "DUP3"
    },
    "629": {
      "op": "ADD"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH13",
      "value": "0x4E6F205265456E7472616E6365"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "650": {
      "op": "DUP3"
    },
    "651": {
      "op": "ADD"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "655": {
      "op": "ADD"
    },
    "656": {
      "offset": [
        616,
        649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "659": {
      "op": "JUMP"
    },
    "660": {
      "offset": [
        616,
        649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "offset": [
        659,
        665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "663": {
      "offset": [
        659,
        672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "664": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "665": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "668": {
      "op": "NOT"
    },
    "669": {
      "offset": [
        659,
        672
      ],
      "op": "DUP2",
      "path": "0"
    },
    "670": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "AND",
      "path": "0"
    },
    "671": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "674": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "OR",
      "path": "0"
    },
    "675": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "676": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "677": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "678": {
      "fn": "Faucet.request",
      "offset": [
        659,
        672
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "680": {
      "fn": "Faucet.request",
      "offset": [
        1089,
        1095
      ],
      "op": "AND",
      "path": "0",
      "statement": 6
    },
    "681": {
      "branch": 15,
      "fn": "Faucet.request",
      "offset": [
        1088,
        1095
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "682": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C5"
    },
    "685": {
      "branch": 15,
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "686": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "688": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "695": {
      "op": "SHL"
    },
    "696": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "DUP2",
      "path": "0"
    },
    "697": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "698": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "700": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "ADD",
      "path": "0"
    },
    "701": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "704": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "705": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "708": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        1080,
        1133
      ],
      "op": "JUMP",
      "path": "0"
    },
    "709": {
      "fn": "Faucet.request",
      "offset": [
        1080,
        1133
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "710": {
      "fn": "Faucet.request",
      "offset": [
        1158,
        1159
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "712": {
      "fn": "Faucet.request",
      "offset": [
        1151,
        1155
      ],
      "op": "DUP2",
      "path": "0"
    },
    "713": {
      "branch": 16,
      "fn": "Faucet.request",
      "offset": [
        1151,
        1159
      ],
      "op": "GT",
      "path": "0"
    },
    "714": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "717": {
      "branch": 16,
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "718": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "720": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "727": {
      "op": "SHL"
    },
    "728": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "DUP2",
      "path": "0"
    },
    "729": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "732": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "734": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "DUP3",
      "path": "0"
    },
    "735": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "ADD",
      "path": "0"
    },
    "736": {
      "op": "MSTORE"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "741": {
      "op": "DUP3"
    },
    "742": {
      "op": "ADD"
    },
    "743": {
      "op": "MSTORE"
    },
    "744": {
      "op": "PUSH7",
      "value": "0x526571203D203"
    },
    "752": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "754": {
      "op": "SHL"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "ADD"
    },
    "759": {
      "op": "MSTORE"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "762": {
      "op": "ADD"
    },
    "763": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "766": {
      "op": "JUMP"
    },
    "767": {
      "fn": "Faucet.request",
      "offset": [
        1143,
        1171
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "fn": "Faucet.request",
      "offset": [
        1197,
        1211
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 8,
      "value": "0x16345785D8A0000"
    },
    "777": {
      "fn": "Faucet.request",
      "offset": [
        1189,
        1193
      ],
      "op": "DUP2",
      "path": "0"
    },
    "778": {
      "fn": "Faucet.request",
      "offset": [
        1189,
        1211
      ],
      "op": "GT",
      "path": "0"
    },
    "779": {
      "branch": 17,
      "fn": "Faucet.request",
      "offset": [
        1189,
        1211
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "780": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x347"
    },
    "783": {
      "branch": 17,
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "784": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "786": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "795": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "798": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "800": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "DUP3",
      "path": "0"
    },
    "801": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "ADD",
      "path": "0"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "807": {
      "op": "DUP3"
    },
    "808": {
      "op": "ADD"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH13",
      "value": "0xA4CAE240787A40605C628AA89"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x9B"
    },
    "826": {
      "op": "SHL"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "838": {
      "op": "JUMP"
    },
    "839": {
      "fn": "Faucet.request",
      "offset": [
        1181,
        1229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "840": {
      "fn": "Faucet.request",
      "offset": [
        1252,
        1262
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "841": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "843": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "844": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "845": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "846": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "848": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "850": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "851": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "853": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "DUP2",
      "path": "0"
    },
    "854": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "855": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "856": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "857": {
      "fn": "Faucet.request",
      "offset": [
        1267,
        1271
      ],
      "op": "DUP4",
      "path": "0"
    },
    "858": {
      "fn": "Faucet.request",
      "offset": [
        1267,
        1271
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "859": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "860": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x366"
    },
    "863": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "Faucet.request",
      "offset": [
        1267,
        1271
      ],
      "op": "DUP5",
      "path": "0"
    },
    "865": {
      "fn": "Faucet.request",
      "offset": [
        1267,
        1271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "866": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "869": {
      "fn": "Faucet.request",
      "jump": "i",
      "offset": [
        1240,
        1271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "870": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "871": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "872": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "873": {
      "fn": "Faucet.request",
      "offset": [
        1240,
        1271
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "op": "POP"
    },
    "876": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "878": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "879": {
      "fn": "Faucet.request",
      "offset": [
        1289,
        1299
      ],
      "op": "CALLER",
      "path": "0"
    },
    "880": {
      "fn": "Faucet.request",
      "offset": [
        1289,
        1299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "DUP3",
      "path": "0"
    },
    "882": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "883": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "886": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "MUL",
      "path": "0"
    },
    "887": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "888": {
      "fn": "Faucet.request",
      "offset": [
        1310,
        1314
      ],
      "op": "DUP4",
      "path": "0"
    },
    "889": {
      "fn": "Faucet.request",
      "offset": [
        1310,
        1314
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "892": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "893": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "894": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "DUP2",
      "path": "0"
    },
    "895": {
      "fn": "Faucet.request",
      "offset": [
        1310,
        1314
      ],
      "op": "DUP6",
      "path": "0"
    },
    "896": {
      "fn": "Faucet.request",
      "offset": [
        1289,
        1299
      ],
      "op": "DUP9",
      "path": "0"
    },
    "897": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "DUP9",
      "path": "0"
    },
    "898": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "CALL",
      "path": "0"
    },
    "899": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "900": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "POP",
      "path": "0"
    },
    "901": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "POP",
      "path": "0"
    },
    "902": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "POP",
      "path": "0"
    },
    "903": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "POP",
      "path": "0"
    },
    "904": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "905": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "906": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "907": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x398"
    },
    "910": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "911": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "912": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "914": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "DUP1",
      "path": "0"
    },
    "915": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "916": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "917": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "919": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "REVERT",
      "path": "0"
    },
    "920": {
      "fn": "Faucet.request",
      "offset": [
        1281,
        1315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "op": "POP"
    },
    "923": {
      "offset": [
        693,
        699
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "925": {
      "offset": [
        693,
        707
      ],
      "op": "DUP1",
      "path": "0"
    },
    "926": {
      "fn": "Faucet.request",
      "offset": [
        693,
        707
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "927": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "930": {
      "op": "NOT"
    },
    "931": {
      "offset": [
        693,
        707
      ],
      "op": "AND",
      "path": "0"
    },
    "932": {
      "fn": "Faucet.request",
      "offset": [
        693,
        707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "933": {
      "fn": "Faucet.request",
      "offset": [
        693,
        707
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "934": {
      "fn": "Faucet.request",
      "jump": "o",
      "offset": [
        1010,
        1322
      ],
      "op": "JUMP",
      "path": "0"
    },
    "935": {
      "op": "JUMPDEST"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "940": {
      "op": "DUP3"
    },
    "941": {
      "op": "DUP5"
    },
    "942": {
      "op": "SUB"
    },
    "943": {
      "op": "SLT"
    },
    "944": {
      "op": "ISZERO"
    },
    "945": {
      "op": "PUSH2",
      "value": "0x3B9"
    },
    "948": {
      "op": "JUMPI"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "951": {
      "op": "DUP1"
    },
    "952": {
      "op": "REVERT"
    },
    "953": {
      "op": "JUMPDEST"
    },
    "954": {
      "op": "DUP2"
    },
    "955": {
      "op": "CALLDATALOAD"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "962": {
      "op": "SHL"
    },
    "963": {
      "op": "SUB"
    },
    "964": {
      "op": "DUP2"
    },
    "965": {
      "op": "AND"
    },
    "966": {
      "op": "DUP2"
    },
    "967": {
      "op": "EQ"
    },
    "968": {
      "op": "PUSH2",
      "value": "0x3D0"
    },
    "971": {
      "op": "JUMPI"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "974": {
      "op": "DUP1"
    },
    "975": {
      "op": "REVERT"
    },
    "976": {
      "op": "JUMPDEST"
    },
    "977": {
      "op": "SWAP4"
    },
    "978": {
      "op": "SWAP3"
    },
    "979": {
      "op": "POP"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "jump": "o",
      "op": "JUMP"
    },
    "983": {
      "op": "JUMPDEST"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "op": "DUP3"
    },
    "989": {
      "op": "DUP5"
    },
    "990": {
      "op": "SUB"
    },
    "991": {
      "op": "SLT"
    },
    "992": {
      "op": "ISZERO"
    },
    "993": {
      "op": "PUSH2",
      "value": "0x3E9"
    },
    "996": {
      "op": "JUMPI"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "999": {
      "op": "DUP1"
    },
    "1000": {
      "op": "REVERT"
    },
    "1001": {
      "op": "JUMPDEST"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "op": "CALLDATALOAD"
    },
    "1004": {
      "op": "SWAP2"
    },
    "1005": {
      "op": "SWAP1"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "jump": "o",
      "op": "JUMP"
    },
    "1008": {
      "op": "JUMPDEST"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1011": {
      "op": "DUP1"
    },
    "1012": {
      "op": "DUP3"
    },
    "1013": {
      "op": "MSTORE"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1016": {
      "op": "SWAP1"
    },
    "1017": {
      "op": "DUP3"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "op": "MSTORE"
    },
    "1020": {
      "op": "PUSH32",
      "value": "0x46756E64696E6720636C6F7365642C20436865636B206261636B206C61746572"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1055": {
      "op": "DUP3"
    },
    "1056": {
      "op": "ADD"
    },
    "1057": {
      "op": "MSTORE"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1065": {
      "op": "DUP3"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "op": "MSTORE"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "SWAP1"
    },
    "1072": {
      "jump": "o",
      "op": "JUMP"
    },
    "1073": {
      "op": "JUMPDEST"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "NOT"
    },
    "1078": {
      "op": "DUP3"
    },
    "1079": {
      "op": "GT"
    },
    "1080": {
      "op": "ISZERO"
    },
    "1081": {
      "op": "PUSH2",
      "value": "0x452"
    },
    "1084": {
      "op": "JUMPI"
    },
    "1085": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1105": {
      "op": "REVERT"
    },
    "1106": {
      "op": "JUMPDEST"
    },
    "1107": {
      "op": "POP"
    },
    "1108": {
      "op": "ADD"
    },
    "1109": {
      "op": "SWAP1"
    },
    "1110": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "535a348aa03ea632ce8e8229e361d09cd001c596",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >0.6.0;\n\n/*\n * @title: Rinkeby Test Faucet.\n * @author: Anthony (fps) https://github.com/fps8k .\n * @dev: \n*/\n\ncontract Faucet\n{\n    // Faucet owner, all collectors, closed.\n\n    address private owner;\n\n    mapping (address => uint256) private collections;\n    mapping (address => uint256) public funders;\n\n    bool closed;\n    bool locked;\n\n\n    // Constructor.\n\n    constructor()\n    {\n        owner = 0x5e078E6b545cF88aBD5BB58d27488eF8BE0D2593;\n    }\n\n\n\n\n    fallback() external payable{}\n    receive() external payable{}\n\n    modifier noReEntrance()\n    {\n        require(!locked, \"No ReEntrance\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n\n\n\n    function fund() public payable noReEntrance\n    {\n        require(!closed, \"Funding closed, Check back later.\");\n        require(msg.value >= 100000000 gwei, \"Min == 0.1ETH\");\n        require(msg.value <= 2 ether, \"Max == 2ETH\");\n\n        funders[msg.sender] += msg.value;\n    }\n\n\n\n\n    function request(uint _val) public payable noReEntrance\n    {\n        require(!closed, \"Funding closed, Check back later.\");\n        require(_val > 0, \"Req = 0\");\n        require(_val <= 100000000 gwei, \"Req <= 0.1ETH\");\n\n        collections[msg.sender] += _val;\n        payable(msg.sender).transfer(_val);\n    }\n\n\n\n\n    function toggle() public\n    {\n        require(msg.sender == owner, \"!Owner\");\n        closed = !closed;\n    }\n}",
  "sourceMap": "159:1284:0:-:0;;;416:85;;;;;;;;;-1:-1:-1;444:5:0;:50;;-1:-1:-1;;;;;;444:50:0;452:42;444:50;;;159:1284;;;;;;",
  "sourcePath": "contracts/Faucet.sol",
  "type": "contract"
}